# This file is auto-generated.
---
# Source: sumologic/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: collection-sumologic
  labels:
    app: collection-sumologic
    
data:
  fluent.conf: |-
    @include common.conf
    @include metrics.conf
    @include logs.conf
  buffer.output.conf: |-
    <buffer>
      @type memory
      compress gzip
      flush_interval "5s"
      flush_thread_count "4"
      chunk_limit_size "100k"
      total_limit_size "128m"
    </buffer>
  common.conf: |-
    <source>
      @type prometheus
      metrics_path /metrics
      port 24231
    </source>
    <source>
      @type prometheus_output_monitor
    </source>
  
  metrics.conf: |-
    <source>
      @type http
      port 9888
      <parse>
        @type protobuf
      </parse>
    </source>
    <match prometheus.metrics**>
      @type datapoint
      @label @DATAPOINT
    </match>
    <label @DATAPOINT>
      <filter prometheus.metrics**>
        @type enhance_k8s_metadata
      </filter>
      
      <filter prometheus.metrics**>
        @type prometheus_format
        relabel container_name:container,pod_name:pod
      </filter>
      <match prometheus.metrics.apiserver**>
        @type sumologic
        @id sumologic.endpoint.metrics.apiserver
        endpoint "#{ENV['SUMO_ENDPOINT_METRICS_APISERVER']}"
        @include metrics.output.conf
      </match>
      <match prometheus.metrics.kubelet**>
        @type sumologic
        @id sumologic.endpoint.metrics.kubelet
        endpoint "#{ENV['SUMO_ENDPOINT_METRICS_KUBELET']}"
        @include metrics.output.conf
      </match>
      <match prometheus.metrics.container**>
        @type sumologic
        @id sumologic.endpoint.metrics.container
        endpoint "#{ENV['SUMO_ENDPOINT_METRICS_KUBELET']}"
        @include metrics.output.conf
      </match>
      <match prometheus.metrics.controller-manager**>
        @type sumologic
        @id sumologic.endpoint.metrics.kube.controller.manager
        endpoint "#{ENV['SUMO_ENDPOINT_METRICS_KUBE_CONTROLLER_MANAGER']}"
        @include metrics.output.conf
      </match>
      <match prometheus.metrics.scheduler**>
        @type sumologic
        @id sumologic.endpoint.metrics.kube.scheduler
        endpoint "#{ENV['SUMO_ENDPOINT_METRICS_KUBE_SCHEDULER']}"
        @include metrics.output.conf
      </match>
      <match prometheus.metrics.state**>
        @type sumologic
        @id sumologic.endpoint.metrics.kube.state
        endpoint "#{ENV['SUMO_ENDPOINT_METRICS_KUBE_STATE']}"
        @include metrics.output.conf
      </match>
      <match prometheus.metrics.node**>
        @type sumologic
        @id sumologic.endpoint.metrics.node.exporter
        endpoint "#{ENV['SUMO_ENDPOINT_METRICS_NODE_EXPORTER']}"
        @include metrics.output.conf
      </match>
      <match prometheus.metrics**>
        @type sumologic
        @id sumologic.endpoint.metrics
        endpoint "#{ENV['SUMO_ENDPOINT_METRICS']}"
        @include metrics.output.conf
      </match>
    </label>
  metrics.output.conf: |-
    data_type metrics
    metric_data_format prometheus
    disable_cookies true
    verify_ssl true
    proxy_uri ""
    @include buffer.output.conf
    
  
  logs.conf: |-
    <source>
      @type forward
      port 24321
      bind 0.0.0.0
    </source>
    @include logs.source.containers.conf
    @include logs.source.kubelet.conf
    @include logs.source.systemd.conf
    
  logs.output.conf: |-
    data_type logs
    log_key log
    endpoint "#{ENV['SUMO_ENDPOINT_LOGS']}"
    verify_ssl true
    proxy_uri ""
    @include buffer.output.conf
    
  logs.source.containers.conf: |-
    <filter containers.**>
      @type concat
      key log
      multiline_start_regexp "/^\\w{3} \\d{1,2}, \\d{4}/"
      separator ""
      timeout_label @NORMAL
    </filter>
    <match containers.**>
      @type relabel
      @label @NORMAL
    </match>
    <label @NORMAL>
      <filter containers.**>
        @type kubernetes_metadata
        @log_level warn
        annotation_match ["sumologic\.com.*"]
        de_dot false
        watch "true"
        ca_file ""
        verify_ssl "true"
        client_cert ""
        client_key ""
        bearer_token_file ""
        cache_size "1000"
        cache_ttl "3600"
        tag_to_kubernetes_name_regexp '.+?\.containers\.(?<pod_name>[^_]+)_(?<namespace>[^_]+)_(?<container_name>.+)-(?<docker_id>[a-z0-9]{64})\.log$'
        
      </filter>
      <filter containers.**>
        @type enhance_k8s_metadata
        in_namespace_path '$.kubernetes.namespace_name'
        in_pod_path '$.kubernetes.pod_name'
        data_type logs
      </filter>
  
    ## Input to kubernetes_sumologic plugin
      # {
      #     "log" => "some message",
      #     "stream" => "stdout",
      #     "time" => "2019-10-11T04:45:38.046161188Z",
      #     "docker" => {
      #         "container_id" => "5c280b6ad5abec32e9af729295c20f60fbeadf3ba16fda2d121f87228e6822e0",
      #     },
      #     "kubernetes" => {
      #         "container_name" => "log-format-labs",
      #         "namespace_name" => "default",
      #         "pod_name" => "log-format-labs-54575ccdb9-9d677",
      #         "pod_id" => "170af806-c801-11e8-9009-025000000001",
      #         "labels" => {
      #             "pod-template-hash" => "1013177865",
      #             "empty-value" => "",
      #             "run" => "log-format-labs",
      #             "null-value" => nil,
      #         },
      #         "namespace_labels" => {
      #             "app" => "sumologic"
      #         },
      #         "host" => "docker-for-desktop",
      #         "master_url" => "https =>//10.96.0.1 =>443/api",
      #         "namespace_id" => "e8572415-9596-11e8-b28b-025000000001",
      #     }
      # }
      <filter containers.**>
        @type kubernetes_sumologic
        source_name "%{namespace}.%{pod}.%{container}"
        source_host ""
        source_category "%{namespace}/%{pod_name}"
        source_category_prefix "kubernetes/"
        source_category_replace_dash "/"
        exclude_namespace_regex ""
        exclude_pod_regex ""
        exclude_container_regex ""
        exclude_host_regex ""
      </filter>
    ## Output from kubernetes_sumologic plugin
      # {
      #     "message" => {
      #         "log" => "some message",
      #         "stream" => "stdout",
      #         "time" => "2019-10-11T04:45:38.046161188Z"
      #     },
      #     "_sumo_metadata" => {
      #         :category => "kubernetes/default/log/format/labs",
      #         :host => "",
      #         :source => "default.log-format-labs-54575ccdb9-9d677.log-format-labs",
      #         :fields => {
      #           "container_id" => "5c280b6ad5abec32e9af729295c20f60fbeadf3ba16fda2d121f87228e6822e0",
      #           "pod_labels_pod-template-hash" => "1013177865",
      #           "pod_labels_run" => "log-format-labs",
      #           "namespace_labels_app" => "sumologic",
      #           "container" => "log-format-labs",
      #           "namespace" => "default",
      #           "pod" => "log-format-labs-54575ccdb9-9d677",
      #           "pod_id" => "170af806-c801-11e8-9009-025000000001",
      #           "host" => "docker-for-desktop",
      #           "master_url" => "https =>//10.96.0.1 =>443/api",
      #           "namespace_id" => "e8572415-9596-11e8-b28b-025000000001",
      #           "node" => "docker-for-desktop"
      #         }
      #     }
      # }
  
    ## For `text` format, uncomment the following record_modifier section
      # <filter containers.**>
      #   @type record_modifier
      #   <record>
      #     message ${record["message"]["log"]}
      #   </record>
      # </filter>
    ## Output from record_modifier plugin
      # {
      #     "message" => "some message",
      #     "_sumo_metadata" => {
      #         :category => "kubernetes/default/log/format/labs",
      #         :host => "",
      #         :source => "default.log-format-labs-54575ccdb9-9d677.log-format-labs",
      #         :fields => {
      #           "container_id" => "5c280b6ad5abec32e9af729295c20f60fbeadf3ba16fda2d121f87228e6822e0",
      #           "pod_labels_pod-template-hash" => "1013177865",
      #           "pod_labels_run" => "log-format-labs",
      #           "namespace_labels_app" => "sumologic",
      #           "container" => "log-format-labs",
      #           "namespace" => "default",
      #           "pod" => "log-format-labs-54575ccdb9-9d677",
      #           "pod_id" => "170af806-c801-11e8-9009-025000000001",
      #           "host" => "docker-for-desktop",
      #           "master_url" => "https =>//10.96.0.1 =>443/api",
      #           "namespace_id" => "e8572415-9596-11e8-b28b-025000000001",
      #           "node" => "docker-for-desktop"
      #         }
      #     }
      # }
  
    ## For `json_merge` format, uncomment the following record_modifier section
      # <filter containers.**>
      #   @type record_modifier
      #   <record>
      #     message ${begin; record["message"].merge(JSON.parse(record["message"]["log"])).delete("log"); rescue JSON::ParserError; record["message"]; end}
      #   </record>
      # </filter>
    ## Output from record_modifier plugin, where input "log" => "{\"foo\":\"bar\", \"a\":\"b\"}"
      # {
      #     "message" => {
      #         "foo" => "bar",
      #         "a" => "b",
      #         "stream" => "stdout",
      #         "time" => "2019-10-11T04:45:38.046161188Z"
      #     },
      #     "_sumo_metadata" => {
      #         :category => "kubernetes/default/log/format/labs",
      #         :host => "",
      #         :source => "default.log-format-labs-54575ccdb9-9d677.log-format-labs",
      #         :fields => {
      #           "container_id" => "5c280b6ad5abec32e9af729295c20f60fbeadf3ba16fda2d121f87228e6822e0",
      #           "pod_labels_pod-template-hash" => "1013177865",
      #           "pod_labels_run" => "log-format-labs",
      #           "namespace_labels_app" => "sumologic",
      #           "container" => "log-format-labs",
      #           "namespace" => "default",
      #           "pod" => "log-format-labs-54575ccdb9-9d677",
      #           "pod_id" => "170af806-c801-11e8-9009-025000000001",
      #           "host" => "docker-for-desktop",
      #           "master_url" => "https =>//10.96.0.1 =>443/api",
      #           "namespace_id" => "e8572415-9596-11e8-b28b-025000000001",
      #           "node" => "docker-for-desktop"
      #         }
      #     }
      # }
      
  
      <match containers.**>
        @type sumologic
        @id sumologic.endpoint.logs
        @include logs.output.conf
      </match>
    </label>
  logs.source.kubelet.conf: |-
    <match host.kubelet.**>
      @type relabel
      @label @KUBELET
    </match>
    <label @KUBELET>
      <filter host.kubelet.**>
        @type kubernetes_sumologic
        source_category "kubelet"
        source_name "k8s_kubelet"
        source_category_prefix "kubernetes/"
        exclude_facility_regex ""
        exclude_host_regex ""
        exclude_priority_regex ""
        exclude_unit_regex ""
      </filter>
      
      <match host.kubelet.**>
        @type sumologic
        @id sumologic.endpoint.logs.kubelet
        @include logs.output.conf
      </match>
    </label>
  logs.source.systemd.conf: |-
    <match host.**>
      @type relabel
      @label @SYSTEMD
    </match>
    <label @SYSTEMD>
      <filter host.**>
        @type kubernetes_sumologic
        source_category "system"
        source_category_prefix "kubernetes/"
        exclude_facility_regex ""
        exclude_host_regex ""
        exclude_priority_regex ""
        exclude_unit_regex ""
      </filter>
      <filter host.**>
        @type record_modifier
        <record>
          _sumo_metadata ${record["_sumo_metadata"][:source] = tag_parts[1]; record["_sumo_metadata"]}
        </record>
      </filter>
      
      <match host.**>
        @type sumologic
        @id sumologic.endpoint.logs.systemd
        @include logs.output.conf
      </match>
    </label>
  

---
# Source: sumologic/templates/events-configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: collection-sumologic-events
  labels:
    app: collection-sumologic-events
    
data:
  fluent.conf: |-
    @include events.conf
  events.conf: |-
    <source>
      @type events
      deploy_namespace $NAMESPACE
    </source>
    <source>
      @type prometheus
      metrics_path /metrics
      port 24231
    </source>
    <source>
      @type prometheus_output_monitor
    </source>
    <match kubernetes.**>
      @type sumologic
      @id sumologic.endpoint.events
      endpoint "#{ENV['SUMO_ENDPOINT_EVENTS']}"
      data_type logs
      disable_cookies true
      verify_ssl true
      proxy_uri ""
      <buffer>
        @type memory
        compress gzip
        flush_interval "5s"
        flush_thread_count "4"
        chunk_limit_size "100k"
        total_limit_size "128m"
      </buffer>
      
    </match>
  
---
# Source: sumologic/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: collection-sumologic
  labels:
    app: collection-sumologic
    
---
# Source: sumologic/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: collection-sumologic
  labels:
    app: collection-sumologic
    
rules:
- apiGroups: ["", "apps", "extensions", "events.k8s.io"]
  resources:
  - configmaps
  - daemonsets
  - deployments
  - endpoints
  - events
  - namespaces
  - nodes
  - pods
  - replicasets
  - services
  - statefulsets
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
    - configmaps
  verbs: ["create", "patch"]
---
# Source: sumologic/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: collection-sumologic
  labels:
    app: collection-sumologic
    
subjects:
- kind: ServiceAccount
  namespace: $NAMESPACE
  name: collection-sumologic
roleRef:
  kind: ClusterRole
  name: collection-sumologic
  apiGroup: rbac.authorization.k8s.io
---
# Source: sumologic/templates/events-service.yaml

apiVersion: v1
kind: Service
metadata:
  name: collection-sumologic-events
  labels:
    app: collection-sumologic-events
    
spec:
  selector:
    app: collection-sumologic-events
  ports:
  - name: metrics
    port: 24231
    targetPort: 24231
    protocol: TCP
---
# Source: sumologic/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: collection-sumologic
  labels:
    app: collection-sumologic
    
spec:
  selector:
    app: collection-sumologic
  ports:
  - name: prom-write
    port: 9888
    targetPort: 9888
    protocol: TCP
  - name: fluent-bit
    port: 24321
    targetPort: 24321
    protocol: TCP
  - name: metrics
    port: 24231
    targetPort: 24231
    protocol: TCP

---
# Source: sumologic/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: collection-sumologic
  labels:
    app: collection-sumologic
    
spec:
  selector:
    matchLabels:
      app: collection-sumologic
  replicas: 3
  template:
    metadata:
      labels:
        app: collection-sumologic
        
    spec:
      serviceAccountName: collection-sumologic
      volumes:
      - name: pos-files
        hostPath:
          path: /var/run/fluentd-pos
          type: ""
      - name: config-volume
        configMap:
          name: collection-sumologic
      containers:
      - name: fluentd
        image: sumologic/kubernetes-fluentd:0.8.0
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 0.5
            memory: 768Mi
          
        ports:
        - name: prom-write
          containerPort: 9888
          protocol: TCP
        - name: fluent-bit
          containerPort: 24321
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "[ $(pgrep ruby | wc -l) -gt 0 ]"
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "[ $(pgrep ruby | wc -l) -gt 0 ]"
          initialDelaySeconds: 30
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /fluentd/etc/
        - name: pos-files
          mountPath: /mnt/pos/
        env:
        - name: SUMO_ENDPOINT_METRICS
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics
        - name: SUMO_ENDPOINT_METRICS_APISERVER
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-apiserver
        - name: SUMO_ENDPOINT_METRICS_KUBELET
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-kubelet
        - name: SUMO_ENDPOINT_METRICS_KUBE_CONTROLLER_MANAGER
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-kube-controller-manager
        - name: SUMO_ENDPOINT_METRICS_KUBE_SCHEDULER
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-kube-scheduler
        - name: SUMO_ENDPOINT_METRICS_KUBE_STATE
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-kube-state
        - name: SUMO_ENDPOINT_METRICS_NODE_EXPORTER
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-node-exporter
        - name: SUMO_ENDPOINT_LOGS
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-logs
---
# Source: sumologic/templates/events-deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: collection-sumologic-events
  labels:
    app: collection-sumologic-events
    
spec:
  selector:
    matchLabels:
      app: collection-sumologic-events
  template:
    metadata:
      labels:
        app: collection-sumologic-events
        
    spec:
      serviceAccountName: collection-sumologic
      volumes:
      - name: pos-files
        hostPath:
          path: /var/run/fluentd-pos
          type: ""
      - name: config-volume
        configMap:
          name: collection-sumologic-events
      containers:
      - name: fluentd-events
        image: sumologic/kubernetes-fluentd:0.8.0
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
          
        volumeMounts:
        - name: config-volume
          mountPath: /fluentd/etc/
        - name: pos-files
          mountPath: /mnt/pos/
        livenessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "[ $(pgrep ruby | wc -l) -gt 0 ]"
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "[ $(pgrep ruby | wc -l) -gt 0 ]"
          initialDelaySeconds: 30
          periodSeconds: 5
        env:
        - name: SUMO_ENDPOINT_EVENTS
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-events
