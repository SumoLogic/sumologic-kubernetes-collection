---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: fluentd
subjects:
- kind: ServiceAccount
  namespace: $NAMESPACE
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: fluentd
  labels:
    k8s-app: fluentd-sumologic
rules:
- apiGroups: ["", "apps", "extensions", "events.k8s.io"]
  resources:
  - configmaps
  - daemonsets
  - deployments
  - endpoints
  - events
  - namespaces
  - nodes
  - pods
  - replicasets
  - services
  - statefulsets
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
    - configmaps
  verbs: ["create", "patch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  labels:
    k8s-app: fluentd-sumologic
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
data:
  fluent.conf: |-
    @include metrics.conf
    @include logs.conf
  metrics.conf: |-
    <source>
      @type http
      port 9888
      <parse>
        @type protobuf
      </parse>
    </source>
    <match prometheus.metrics.operator.rule>
      @type datapoint
      tag prometheus.datapoint.operator.rule
    </match>
    <match prometheus.metrics**>
      @type datapoint
      tag prometheus.datapoint
    </match>
    <match prometheus.datapoint>
      @type rewrite_tag_filter
      <rule>
        key job
        pattern ^(.*)$
        tag ${tag}.$1
      </rule>
    </match>
    <filter prometheus.datapoint**>
      @type enhance_k8s_metadata
    </filter>
    <filter prometheus.datapoint**>
      @type prometheus_format
      relabel container_name:container,pod_name:pod
    </filter>
    <match prometheus.datapoint.apiserver**>
      @type sumologic
      endpoint "#{ENV['SUMO_ENDPOINT_METRICS_APISERVER']}"
      data_type metrics
      metric_data_format prometheus
      disable_cookies true
    </match>
    <match prometheus.datapoint.kubelet**>
      @type sumologic
      endpoint "#{ENV['SUMO_ENDPOINT_METRICS_KUBELET']}"
      data_type metrics
      metric_data_format prometheus
      disable_cookies true
    </match>
    <match prometheus.datapoint.kube-controller-manager**>
      @type sumologic
      endpoint "#{ENV['SUMO_ENDPOINT_METRICS_KUBE_CONTROLLER_MANAGER']}"
      data_type metrics
      metric_data_format prometheus
      disable_cookies true
    </match>
    <match prometheus.datapoint.kube-scheduler**>
      @type sumologic
      endpoint "#{ENV['SUMO_ENDPOINT_METRICS_KUBE_SCHEDULER']}"
      data_type metrics
      metric_data_format prometheus
      disable_cookies true
    </match>
    <match prometheus.datapoint.kube-state**>
      @type sumologic
      endpoint "#{ENV['SUMO_ENDPOINT_METRICS_KUBE_STATE']}"
      data_type metrics
      metric_data_format prometheus
      disable_cookies true
    </match>
    <match prometheus.datapoint.node-exporter**>
      @type sumologic
      endpoint "#{ENV['SUMO_ENDPOINT_METRICS_NODE_EXPORTER']}"
      data_type metrics
      metric_data_format prometheus
      disable_cookies true
    </match>
    <match prometheus.datapoint**>
      @type sumologic
      endpoint "#{ENV['SUMO_ENDPOINT_METRICS']}"
      data_type metrics
      metric_data_format prometheus
      disable_cookies true
    </match>
  logs.conf: |-
    <source>
      @type forward
      port 24321
      bind 0.0.0.0
    </source>

    @include logs.source.containers.conf
    @include logs.source.systemd.conf

  logs.source.containers.conf: |-
    <filter containers.**>
      @type concat
      key log
      multiline_start_regexp "#{ENV['MULTILINE_START_REGEXP']}"
      separator "#{ENV['CONCAT_SEPARATOR']}"
      timeout_label @NORMAL
    </filter>

    <match containers.**>
      @type relabel
      @label @NORMAL
    </match>

    <label @NORMAL>
      <filter containers.**>
        @type kubernetes_metadata
        @log_level warn
        annotation_match ["sumologic\.com.*"]
        de_dot false
        watch "#{ENV['K8S_METADATA_FILTER_WATCH']}"
        ca_file "#{ENV['K8S_METADATA_FILTER_CA_FILE']}"
        verify_ssl "#{ENV['K8S_METADATA_FILTER_VERIFY_SSL']}"
        client_cert "#{ENV['K8S_METADATA_FILTER_CLIENT_CERT']}"
        client_key "#{ENV['K8S_METADATA_FILTER_CLIENT_KEY']}"
        bearer_token_file "#{ENV['K8S_METADATA_FILTER_BEARER_TOKEN_FILE']}"
        cache_size "#{ENV['K8S_METADATA_FILTER_BEARER_CACHE_SIZE']}"
        cache_ttl "#{ENV['K8S_METADATA_FILTER_BEARER_CACHE_TTL']}"
        tag_to_kubernetes_name_regexp '.+?\.containers\.(?<pod_name>[^_]+)_(?<namespace>[^_]+)_(?<container_name>.+)-(?<docker_id>[a-z0-9]{64})\.log$'
        merge_json_log false
      </filter>

      <filter containers.**>
        @type kubernetes_sumologic
        source_name "#{ENV['SOURCE_NAME']}"
        source_host "#{ENV['SOURCE_HOST']}"
        log_format "#{ENV['LOG_FORMAT']}"
        kubernetes_meta "#{ENV['KUBERNETES_META']}"
        kubernetes_meta_reduce "#{ENV['KUBERNETES_META_REDUCE']}"
        add_stream "#{ENV['ADD_STREAM']}"
        add_time "#{ENV['ADD_TIME']}"
        source_category "#{ENV['SOURCE_CATEGORY']}"
        source_category_prefix "#{ENV['SOURCE_CATEGORY_PREFIX']}"
        source_category_replace_dash "#{ENV['SOURCE_CATEGORY_REPLACE_DASH']}"
        exclude_namespace_regex "#{ENV['EXCLUDE_NAMESPACE_REGEX']}"
        exclude_pod_regex "#{ENV['EXCLUDE_POD_REGEX']}"
        exclude_container_regex "#{ENV['EXCLUDE_CONTAINER_REGEX']}"
        exclude_host_regex "#{ENV['EXCLUDE_HOST_REGEX']}"
      </filter>

      @include logs.output.conf
    </label>

  logs.source.systemd.conf: |-
    <match host.kubelet.**>
      @type relabel
      @label @KUBELET
    </match>

    <label @KUBELET>
      <filter host.kubelet.**>
        @type kubernetes_sumologic
        source_category kubelet
        source_name k8s_kubelet
        source_category_prefix "#{ENV['SOURCE_CATEGORY_PREFIX']}"
        exclude_facility_regex "#{ENV['EXCLUDE_FACILITY_REGEX']}"
        exclude_host_regex "#{ENV['EXCLUDE_HOST_REGEX']}"
        exclude_priority_regex "#{ENV['EXCLUDE_PRIORITY_REGEX']}"
        exclude_unit_regex "#{ENV['EXCLUDE_UNIT_REGEX']}"
      </filter>

      @include logs.output.conf
    </label>

    <match host.**>
      @type relabel
      @label @SYSTEMD
    </match>

    <label @SYSTEMD>
      <filter host.**>
        @type kubernetes_sumologic
        source_category system
        source_category_prefix "#{ENV['SOURCE_CATEGORY_PREFIX']}"
        exclude_facility_regex "#{ENV['EXCLUDE_FACILITY_REGEX']}"
        exclude_host_regex "#{ENV['EXCLUDE_HOST_REGEX']}"
        exclude_priority_regex "#{ENV['EXCLUDE_PRIORITY_REGEX']}"
        exclude_unit_regex "#{ENV['EXCLUDE_UNIT_REGEX']}"
      </filter>

      <filter host.**>
        @type record_modifier
        <record>
          _sumo_metadata ${record["_sumo_metadata"][:source] = tag_parts[1]; record["_sumo_metadata"]}
        </record>
      </filter>

      @include logs.output.conf
    </label>

  logs.output.conf: |-
    <match **>
      @type sumologic
      log_key log
      endpoint "#{ENV['SUMO_ENDPOINT_LOGS']}"
      verify_ssl "#{ENV['VERIFY_SSL']}"
      log_format "#{ENV['LOG_FORMAT']}"
      flush_interval "#{ENV['FLUSH_INTERVAL']}"
      num_threads "#{ENV['NUM_THREADS']}"
      open_timeout 60
      add_timestamp "#{ENV['ADD_TIMESTAMP']}"
      timestamp_key "#{ENV['TIMESTAMP_KEY']}"
      proxy_uri "#{ENV['PROXY_URI']}"
    </match>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluentd
  labels:
    k8s-app: fluentd-sumologic
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-sumologic
  replicas: 3
  template:
    metadata:
      labels:
        k8s-app: fluentd-sumologic
    spec:
      serviceAccountName: fluentd
      volumes:
      - name: pos-files
        hostPath:
          path: /var/run/fluentd-pos
          type: ""
      - name: config-volume
        configMap:
          name: fluentd-config
      containers:
      - name: fluentd
        image: yuting-test
        imagePullPolicy: Never
        resources:
          limits:
            memory: 1Gi
            cpu: 1
          requests:
            memory: 768Mi
            cpu: 0.5
        ports:
        - name: prom-write
          containerPort: 9888
          protocol: TCP
        - name: fluent-bit
          containerPort: 24321
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "[[ $( pgrep ruby | wc -l)  == 2 ]]"
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "[[ $( pgrep ruby | wc -l)  == 2 ]]"
          initialDelaySeconds: 45
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /fluentd/etc/
        - name: pos-files
          mountPath: /mnt/pos/
        env:
        - name: SUMO_ENDPOINT_METRICS
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics
        - name: SUMO_ENDPOINT_METRICS_APISERVER
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-apiserver
        - name: SUMO_ENDPOINT_METRICS_KUBELET
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-kubelet
        - name: SUMO_ENDPOINT_METRICS_KUBE_CONTROLLER_MANAGER
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-kube-controller-manager
        - name: SUMO_ENDPOINT_METRICS_KUBE_SCHEDULER
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-kube-scheduler
        - name: SUMO_ENDPOINT_METRICS_KUBE_STATE
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-kube-state
        - name: SUMO_ENDPOINT_METRICS_NODE_EXPORTER
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-node-exporter
        - name: SUMO_ENDPOINT_LOGS
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-logs
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-events-config
data:
  fluent.conf: |-
    @include events.conf
  events.conf: |-
    <source>
      @type events
      deploy_namespace $NAMESPACE
    </source>
    <match kubernetes.**>
      @type sumologic
      endpoint "#{ENV['SUMO_ENDPOINT_EVENTS']}"
      data_type logs
      disable_cookies true
    </match>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluentd-events
  labels:
    k8s-app: fluentd-sumologic-events
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-sumologic-events
  template:
    metadata:
      labels:
        k8s-app: fluentd-sumologic-events
    spec:
      serviceAccountName: fluentd
      volumes:
      - name: pos-files
        hostPath:
          path: /var/run/fluentd-pos
          type: ""
      - name: config-volume
        configMap:
          name: fluentd-events-config
      containers:
      - name: fluentd-events
        image: yuting-test
        imagePullPolicy: Never
        resources:
          limits:
            memory: 256Mi
            cpu: "100m"
          requests:
            memory: 256Mi
            cpu: "100m"
        volumeMounts:
        - name: config-volume
          mountPath: /fluentd/etc/
        - name: pos-files
          mountPath: /mnt/pos/
        env:
        - name: SUMO_ENDPOINT_EVENTS
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-events
---
apiVersion: v1
kind: Service
metadata:
  name: fluentd
  labels:
    k8s-app: fluentd-sumologic
spec:
  selector:
    k8s-app: fluentd-sumologic
  ports:
  - name: prom-write
    port: 9888
    targetPort: 9888
    protocol: TCP
  - name: fluent-bit
    port: 24321
    targetPort: 24321
    protocol: TCP
---
