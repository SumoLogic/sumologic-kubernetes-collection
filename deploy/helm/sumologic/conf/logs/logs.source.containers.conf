<filter containers.**>
  @type concat
  key log
  multiline_start_regexp {{ .Values.fluentd.logs.containers.multilineStartRegexp | quote }}
  separator {{ .Values.fluentd.logs.containers.concatSeparator | quote }}
  timeout_label @NORMAL
</filter>
<match containers.**>
  @type relabel
  @label @NORMAL
</match>
<label @NORMAL>
  <filter containers.**>
    @type kubernetes_metadata
    @log_level warn
    annotation_match ["sumologic\.com.*"]
    de_dot false
    watch {{ .Values.fluentd.logs.containers.k8sMetadataFilter.watch | quote }}
    ca_file {{ .Values.fluentd.logs.containers.k8sMetadataFilter.caFile | quote }}
    verify_ssl {{ .Values.fluentd.logs.containers.k8sMetadataFilter.verifySsl | quote }}
    client_cert {{ .Values.fluentd.logs.containers.k8sMetadataFilter.clientCert | quote }}
    client_key {{ .Values.fluentd.logs.containers.k8sMetadataFilter.clientKey | quote }}
    bearer_token_file {{ .Values.fluentd.logs.containers.k8sMetadataFilter.bearerTokenFile | quote }}
    cache_size {{ .Values.fluentd.logs.containers.k8sMetadataFilter.bearerCacheSize | quote }}
    cache_ttl {{ .Values.fluentd.logs.containers.k8sMetadataFilter.bearerCacheTtl | quote }}
    tag_to_kubernetes_name_regexp '.+?\.containers\.(?<pod_name>[^_]+)_(?<namespace>[^_]+)_(?<container_name>.+)-(?<docker_id>[a-z0-9]{64})\.log$'
{{- .Values.fluentd.logs.containers.k8sMetadataFilter.extraConf | nindent 6 }}
  </filter>
  <filter containers.**>
    @type enhance_k8s_metadata
    in_namespace_path '$.kubernetes.namespace_name'
    in_pod_path '$.kubernetes.pod_name'
    data_type logs
  </filter>

## Input to kubernetes_sumologic plugin
  # {
  #     "log" => "some message",
  #     "stream" => "stdout",
  #     "time" => "2019-10-11T04:45:38.046161188Z",
  #     "docker" => {
  #         "container_id" => "5c280b6ad5abec32e9af729295c20f60fbeadf3ba16fda2d121f87228e6822e0",
  #     },
  #     "kubernetes" => {
  #         "container_name" => "log-format-labs",
  #         "namespace_name" => "default",
  #         "pod_name" => "log-format-labs-54575ccdb9-9d677",
  #         "pod_id" => "170af806-c801-11e8-9009-025000000001",
  #         "labels" => {
  #             "pod-template-hash" => "1013177865",
  #             "empty-value" => "",
  #             "run" => "log-format-labs",
  #             "null-value" => nil,
  #         },
  #         "namespace_labels" => {
  #             "app" => "sumologic"
  #         },
  #         "host" => "docker-for-desktop",
  #         "master_url" => "https =>//10.96.0.1 =>443/api",
  #         "namespace_id" => "e8572415-9596-11e8-b28b-025000000001",
  #     }
  # }
  <filter containers.**>
    @type kubernetes_sumologic
    source_name "#{ENV['SOURCE_NAME']}"
    source_host "#{ENV['SOURCE_HOST']}"
    source_category "#{ENV['SOURCE_CATEGORY']}"
    source_category_prefix "#{ENV['SOURCE_CATEGORY_PREFIX']}"
    source_category_replace_dash "#{ENV['SOURCE_CATEGORY_REPLACE_DASH']}"
    exclude_namespace_regex "#{ENV['EXCLUDE_NAMESPACE_REGEX']}"
    exclude_pod_regex "#{ENV['EXCLUDE_POD_REGEX']}"
    exclude_container_regex "#{ENV['EXCLUDE_CONTAINER_REGEX']}"
    exclude_host_regex "#{ENV['EXCLUDE_HOST_REGEX']}"
  </filter>
## Output from kubernetes_sumologic plugin
  # {
  #     "message" => {
  #         "log" => "some message",
  #         "stream" => "stdout",
  #         "time" => "2019-10-11T04:45:38.046161188Z"
  #     },
  #     "_sumo_metadata" => {
  #         :category => "kubernetes/default/log/format/labs",
  #         :host => "",
  #         :source => "default.log-format-labs-54575ccdb9-9d677.log-format-labs",
  #         :fields => {
  #           "container_id" => "5c280b6ad5abec32e9af729295c20f60fbeadf3ba16fda2d121f87228e6822e0",
  #           "pod_labels_pod-template-hash" => "1013177865",
  #           "pod_labels_run" => "log-format-labs",
  #           "namespace_labels_app" => "sumologic",
  #           "container" => "log-format-labs",
  #           "namespace" => "default",
  #           "pod" => "log-format-labs-54575ccdb9-9d677",
  #           "pod_id" => "170af806-c801-11e8-9009-025000000001",
  #           "host" => "docker-for-desktop",
  #           "master_url" => "https =>//10.96.0.1 =>443/api",
  #           "namespace_id" => "e8572415-9596-11e8-b28b-025000000001",
  #           "node" => "docker-for-desktop"
  #         }
  #     }
  # }

## For `text` format, uncomment the following record_modifier section
  # <filter containers.**>
  #   @type record_modifier
  #   <record>
  #     message ${record["message"]["log"]}
  #   </record>
  # </filter>
## Output from record_modifier plugin
  # {
  #     "message" => "some message",
  #     "_sumo_metadata" => {
  #         :category => "kubernetes/default/log/format/labs",
  #         :host => "",
  #         :source => "default.log-format-labs-54575ccdb9-9d677.log-format-labs",
  #         :fields => {
  #           "container_id" => "5c280b6ad5abec32e9af729295c20f60fbeadf3ba16fda2d121f87228e6822e0",
  #           "pod_labels_pod-template-hash" => "1013177865",
  #           "pod_labels_run" => "log-format-labs",
  #           "namespace_labels_app" => "sumologic",
  #           "container" => "log-format-labs",
  #           "namespace" => "default",
  #           "pod" => "log-format-labs-54575ccdb9-9d677",
  #           "pod_id" => "170af806-c801-11e8-9009-025000000001",
  #           "host" => "docker-for-desktop",
  #           "master_url" => "https =>//10.96.0.1 =>443/api",
  #           "namespace_id" => "e8572415-9596-11e8-b28b-025000000001",
  #           "node" => "docker-for-desktop"
  #         }
  #     }
  # }

## For `json_merge` format, uncomment the following record_modifier section
  # <filter containers.**>
  #   @type record_modifier
  #   <record>
  #     message ${begin; record["message"].merge(JSON.parse(record["message"]["log"])).delete("log"); rescue JSON::ParserError; record["message"]; end}
  #   </record>
  # </filter>
## Output from record_modifier plugin, where input "log" => "{\"foo\":\"bar\", \"a\":\"b\"}"
  # {
  #     "message" => {
  #         "foo" => "bar",
  #         "a" => "b",
  #         "stream" => "stdout",
  #         "time" => "2019-10-11T04:45:38.046161188Z"
  #     },
  #     "_sumo_metadata" => {
  #         :category => "kubernetes/default/log/format/labs",
  #         :host => "",
  #         :source => "default.log-format-labs-54575ccdb9-9d677.log-format-labs",
  #         :fields => {
  #           "container_id" => "5c280b6ad5abec32e9af729295c20f60fbeadf3ba16fda2d121f87228e6822e0",
  #           "pod_labels_pod-template-hash" => "1013177865",
  #           "pod_labels_run" => "log-format-labs",
  #           "namespace_labels_app" => "sumologic",
  #           "container" => "log-format-labs",
  #           "namespace" => "default",
  #           "pod" => "log-format-labs-54575ccdb9-9d677",
  #           "pod_id" => "170af806-c801-11e8-9009-025000000001",
  #           "host" => "docker-for-desktop",
  #           "master_url" => "https =>//10.96.0.1 =>443/api",
  #           "namespace_id" => "e8572415-9596-11e8-b28b-025000000001",
  #           "node" => "docker-for-desktop"
  #         }
  #     }
  # }

  <match containers.**>
    @type sumologic
    @id sumologic.endpoint.logs
{{- .Values.fluentd.logs.containers.outputConf | nindent 6 }}
  </match>
</label>