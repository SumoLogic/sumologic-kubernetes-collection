<filter containers.**>
  @type record_transformer
  enable_ruby
  renew_record true
  <record>
    log    ${record["log"].split(/[\n\t]+/).map! {|item| JSON.parse(item)["log"]}.join("")}
    stream ${[record["log"].split(/[\n\t]+/)[0]].map! {|item| JSON.parse(item)["stream"]}.join("")}
    time   ${[record["log"].split(/[\n\t]+/)[0]].map! {|item| JSON.parse(item)["time"]}.join("")}
  </record>
</filter>
<match containers.**>
  @type relabel
  @label @NORMAL
</match>
<label @NORMAL>
  <filter containers.**>
    @type kubernetes_metadata
    @log_level warn
    annotation_match ["sumologic\.com.*"]
    de_dot false
    watch "#{ENV['K8S_METADATA_FILTER_WATCH']}"
    ca_file "#{ENV['K8S_METADATA_FILTER_CA_FILE']}"
    verify_ssl "#{ENV['K8S_METADATA_FILTER_VERIFY_SSL']}"
    client_cert "#{ENV['K8S_METADATA_FILTER_CLIENT_CERT']}"
    client_key "#{ENV['K8S_METADATA_FILTER_CLIENT_KEY']}"
    bearer_token_file "#{ENV['K8S_METADATA_FILTER_BEARER_TOKEN_FILE']}"
    cache_size "#{ENV['K8S_METADATA_FILTER_CACHE_SIZE']}"
    cache_ttl "#{ENV['K8S_METADATA_FILTER_CACHE_TTL']}"
    tag_to_kubernetes_name_regexp '.+?\.containers\.(?<pod_name>[^_]+)_(?<namespace>[^_]+)_(?<container_name>.+)-(?<docker_id>[a-z0-9]{64})\.log$'
  </filter>
  <filter **>
    @type enhance_k8s_metadata
    cache_size  "#{ENV['K8S_METADATA_FILTER_CACHE_SIZE']}"
    cache_ttl  "#{ENV['K8S_METADATA_FILTER_CACHE_TTL']}"
    cache_refresh "#{ENV['K8S_METADATA_FILTER_CACHE_REFRESH']}"
    in_namespace_path '$.kubernetes.namespace_name'
    in_pod_path '$.kubernetes.pod_name'
    data_type logs
  </filter>
  <filter containers.**>
    @type kubernetes_sumologic
    source_name "#{ENV['SOURCE_NAME']}"
    source_host "#{ENV['SOURCE_HOST']}"
    log_format "#{ENV['LOG_FORMAT']}"
    kubernetes_meta "#{ENV['KUBERNETES_META']}"
    kubernetes_meta_reduce "#{ENV['KUBERNETES_META_REDUCE']}"
    add_stream "#{ENV['ADD_STREAM']}"
    add_time "#{ENV['ADD_TIME']}"
    source_category "#{ENV['SOURCE_CATEGORY']}"
    source_category_prefix "#{ENV['SOURCE_CATEGORY_PREFIX']}"
    source_category_replace_dash "#{ENV['SOURCE_CATEGORY_REPLACE_DASH']}"
    exclude_namespace_regex "#{ENV['EXCLUDE_NAMESPACE_REGEX']}"
    exclude_pod_regex "#{ENV['EXCLUDE_POD_REGEX']}"
    exclude_container_regex "#{ENV['EXCLUDE_CONTAINER_REGEX']}"
    exclude_host_regex "#{ENV['EXCLUDE_HOST_REGEX']}"
  </filter>
  <match **>
    @type sumologic
    @id sumologic.endpoint.logs
    @include logs.output.conf
    <buffer>
      {{- if eq .Values.sumologic.fluentd.buffer "file" }}
      @type file
      path /fluentd/buffer/logs.containers
      {{- else }}
      @type memory
      {{- end }}
      @include buffer.output.conf
    </buffer>
  </match>
</label>