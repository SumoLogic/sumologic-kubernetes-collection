<filter containers.**>
  @type record_transformer
  enable_ruby
  renew_record true
  <record>
    log    ${record["log"].split(/[\n\t]+/).map! {|item| JSON.parse(item)["log"]}.join("")}
    stream ${[record["log"].split(/[\n\t]+/)[0]].map! {|item| JSON.parse(item)["stream"]}.join("")}
    time   ${[record["log"].split(/[\n\t]+/)[0]].map! {|item| JSON.parse(item)["time"]}.join("")}
  </record>
</filter>
<match containers.**>
  @type relabel
  @label @NORMAL
</match>
<label @NORMAL>
  <filter containers.**>
    @type kubernetes_metadata
    @log_level warn
    annotation_match ["sumologic\.com.*"]
    de_dot false
    watch {{ .Values.fluentd.logs.containers.k8sMetadataFilter.watch | quote }}
    ca_file {{ .Values.fluentd.logs.containers.k8sMetadataFilter.caFile | quote }}
    verify_ssl {{ .Values.fluentd.logs.containers.k8sMetadataFilter.verifySsl | quote }}
    client_cert {{ .Values.fluentd.logs.containers.k8sMetadataFilter.clientCert | quote }}
    client_key {{ .Values.fluentd.logs.containers.k8sMetadataFilter.clientKey | quote }}
    bearer_token_file {{ .Values.fluentd.logs.containers.k8sMetadataFilter.bearerTokenFile | quote }}
    cache_size {{ .Values.fluentd.logs.containers.k8sMetadataFilter.bearerCacheSize | quote }}
    cache_ttl {{ .Values.fluentd.logs.containers.k8sMetadataFilter.bearerCacheTtl | quote }}
    tag_to_kubernetes_name_regexp '.+?\.containers\.(?<pod_name>[^_]+)_(?<namespace>[^_]+)_(?<container_name>.+)-(?<docker_id>[a-z0-9]{64})\.log$'
{{- .Values.fluentd.logs.containers.k8sMetadataFilter.extraConf | nindent 6 }}
  </filter>
  <filter containers.**>
    @type enhance_k8s_metadata
    in_namespace_path '$.kubernetes.namespace_name'
    in_pod_path '$.kubernetes.pod_name'
    data_type logs
  </filter>
  <filter containers.**>
    @type kubernetes_sumologic
    source_name {{ .Values.fluentd.logs.containers.sourceName | quote }}
    source_host {{ .Values.fluentd.logs.containers.sourceHost | quote }}
    log_format {{ .Values.fluentd.logs.output.logFormat | quote }}
    source_category {{ .Values.fluentd.logs.containers.sourceCategory | quote }}
    source_category_prefix {{ .Values.fluentd.logs.containers.sourceCategoryPrefix | quote }}
    source_category_replace_dash {{ .Values.fluentd.logs.containers.sourceCategoryReplaceDash | quote }}
    exclude_namespace_regex {{ .Values.fluentd.logs.containers.excludeNamespaceRegex | quote }}
    exclude_pod_regex {{ .Values.fluentd.logs.containers.excludePodRegex | quote }}
    exclude_container_regex {{ .Values.fluentd.logs.containers.excludeContainerRegex | quote }}
    exclude_host_regex {{ .Values.fluentd.logs.containers.excludeHostRegex | quote }}
  </filter>
  <match containers.**>
    @type sumologic
    @id sumologic.endpoint.logs
{{- .Values.fluentd.logs.containers.outputConf | nindent 6 }}
    <buffer>
      {{- if eq .Values.fluentd.buffer.type "file" }}
      @type file
      path /fluentd/buffer/logs.containers
      {{- else }}
      @type memory
      {{- end }}
      @include buffer.output.conf
    </buffer>
  </match>
</label>