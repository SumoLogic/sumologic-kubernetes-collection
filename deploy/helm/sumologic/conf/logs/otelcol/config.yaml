extensions:
  health_check: {}
{{ if .Values.metadata.persistence.enabled }}
  ## Configuration for File Storage extension
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/release/v0.37.x/extension/storage/filestorage
  file_storage:
    directory: /var/lib/storage/otc
    timeout: 10s
    compaction:
      on_rebound: true
      directory: /tmp
{{ end }}
  pprof: {}
exporters:
{{ if .Values.sumologic.logs.container.enabled }}
  ## ref: https://github.com/SumoLogic/sumologic-otel-collector/tree/main/pkg/exporter/sumologicexporter
  sumologic/containers:
    endpoint: ${SUMO_ENDPOINT_DEFAULT_LOGS_SOURCE}
    json_logs:
      add_timestamp: false
    log_format: {{ include "logs.otelcol.container.exporter.format" . }}
    sending_queue:
      enabled: true
      num_consumers: 10
      queue_size: 10_000
{{- if .Values.metadata.persistence.enabled }}
      storage: file_storage
{{- end }}
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/SumoLogic/sumologic-otel-collector/tree/main/pkg/exporter/sumologicexporter
  sumologic/systemd:
    endpoint: ${SUMO_ENDPOINT_DEFAULT_LOGS_SOURCE}
    json_logs:
      add_timestamp: false
    log_format: json
    sending_queue:
      enabled: true
      num_consumers: 10
      queue_size: 10_000
{{- if .Values.metadata.persistence.enabled }}
      storage: file_storage
{{- end }}
{{ end }}

extensions:
{{ if .Values.metadata.persistence.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/extension/storage/filestorage
  file_storage:
    compaction:
      directory: /tmp
      on_rebound: true
    directory: /var/lib/storage/otc
    timeout: 10s
{{ end }}

  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/extension/healthcheckextension
  health_check: {}

  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/extension/pprofextension
  pprof: {}

processors:
{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/attributesprocessor
  attributes/extract_systemd_source_fields:
    actions:
      - action: extract
        key: fluent.tag
        pattern: ^host\.(?P<_sourceName>[a-zA-z0-9]+)\..+$
      - action: insert
        from_attribute: _HOSTNAME
        key: _sourceHost
{{ end }}

{{ if .Values.sumologic.logs.container.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/attributesprocessor
  attributes/fluent_containers:
    actions:
      - action: extract
        key: fluent.tag
        pattern: ^containers\.var\.log\.containers\.(?P<k8s_pod_name>[^_]+)_(?P<k8s_namespace>[^_]+)_(?P<k8s_container_name>.+)-(?P<container_id>[a-f0-9]{64})\.log$
      - action: insert
        from_attribute: container_id
        key: k8s.container.id
      - action: delete
        key: container_id
      - action: insert
        from_attribute: k8s_pod_name
        key: k8s.pod.name
      - action: delete
        key: k8s_pod_name
      - action: insert
        from_attribute: k8s_namespace
        key: k8s.namespace.name
      - action: delete
        key: k8s_namespace
      - action: insert
        from_attribute: k8s_container_name
        key: k8s.container.name
      - action: delete
        key: k8s_container_name
{{ end }}

  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/attributesprocessor
  attributes/remove_fluent_tag:
    actions:
      - action: delete
        key: fluent.tag

  ## The batch processor accepts spans and places them into batches grouped by node and resource
  ## ref: https://github.com/open-telemetry/opentelemetry-collector/tree/v0.76.1/processor/batchprocessor
  batch:
    ## Maximum number of spans sent at once
    send_batch_max_size: 2_048
    ## Number of spans after which a batch will be sent regardless of time
    send_batch_size: 1_024
    ## Time duration after which a batch will be sent regardless of size
    timeout: 1s

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/filterprocessor
  filter/exclude_kubelet:
    logs:
      exclude:
        match_type: strict
        record_attributes:
          - key: _SYSTEMD_UNIT
            value: kubelet.service
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/filterprocessor
  filter/exclude_kubelet_hostname:
    logs:
      exclude:
        match_type: regexp
        record_attributes:
          - key: _HOSTNAME
            value: {{ .Values.sumologic.logs.kubelet.excludeHostRegex | default "$^" | quote }}
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/filterprocessor
  filter/exclude_kubelet_priority:
    logs:
      exclude:
        match_type: regexp
        record_attributes:
          - key: PRIORITY
            value: {{ .Values.sumologic.logs.kubelet.excludePriorityRegex | default "$^" | quote }}
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/filterprocessor
  filter/exclude_kubelet_syslog:
    logs:
      exclude:
        match_type: regexp
        record_attributes:
          - key: SYSLOG_FACILITY
            value: {{ .Values.sumologic.logs.kubelet.excludeFacilityRegex | default "$^" | quote }}
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/filterprocessor
  filter/exclude_kubelet_unit:
    logs:
      exclude:
        match_type: regexp
        record_attributes:
          - key: _SYSTEMD_UNIT
            value: {{ .Values.sumologic.logs.kubelet.excludeUnitRegex | default "$^" | quote }}
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/filterprocessor
  filter/exclude_systemd_hostname:
    logs:
      exclude:
        match_type: regexp
        record_attributes:
          - key: _HOSTNAME
            value: {{ .Values.sumologic.logs.systemd.excludeHostRegex | default "$^" | quote }}
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/filterprocessor
  filter/exclude_systemd_priority:
    logs:
      exclude:
        match_type: regexp
        record_attributes:
          - key: PRIORITY
            value: {{ .Values.sumologic.logs.systemd.excludePriorityRegex | default "$^" | quote }}
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/filterprocessor
  filter/exclude_systemd_syslog:
    logs:
      exclude:
        match_type: regexp
        record_attributes:
          - key: SYSLOG_FACILITY
            value: {{ .Values.sumologic.logs.systemd.excludeFacilityRegex | default "$^" | quote }}
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/filterprocessor
  filter/exclude_systemd_unit:
    logs:
      exclude:
        match_type: regexp
        record_attributes:
          - key: _SYSTEMD_UNIT
            value: {{ .Values.sumologic.logs.systemd.excludeUnitRegex | default "$^" | quote }}
{{ end }}

{{ if .Values.sumologic.logs.container.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/filterprocessor
  filter/include_containers:
    logs:
      include:
        match_type: regexp
        record_attributes:
          - key: k8s.container.name
            value: .+
{{ end }}

{{ if .Values.sumologic.logs.container.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/filterprocessor
  filter/include_fluent_tag_containers:
    logs:
      include:
        match_type: regexp
        record_attributes:
          - key: fluent.tag
            value: containers\..+
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/filterprocessor
  filter/include_fluent_tag_host:
    logs:
      include:
        match_type: regexp
        record_attributes:
          - key: fluent.tag
            value: host\..+
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/filterprocessor
  filter/include_kubelet:
    logs:
      include:
        match_type: strict
        record_attributes:
          - key: _SYSTEMD_UNIT
            value: kubelet.service
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/filterprocessor
  filter/include_systemd:
    logs:
      include:
        match_type: regexp
        record_attributes:
          - key: _SYSTEMD_UNIT
            value: .+
{{ end }}

{{ if .Values.sumologic.logs.container.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/groupbyattrsprocessor
  groupbyattrs/containers:
    keys:
      - k8s.container.id
      - k8s.container.name
      - k8s.namespace.name
      - k8s.pod.name
      - _collector
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/groupbyattrsprocessor
  groupbyattrs/systemd:
    keys:
      - _sourceName
      - _sourceHost
      - _collector
{{ end }}

{{ if .Values.sumologic.logs.container.enabled }}
  ## ref: https://github.com/SumoLogic/sumologic-otel-collector/tree/main/pkg/processor/k8sprocessor
  k8s_tagger:
    extract:
      annotations:
        - key: "*"
          tag_name: "pod_annotations_%s"
      delimiter: "_"
      labels:
        - key: "*"
          tag_name: "pod_labels_%s"
      metadata:
        ## extract the following well-known metadata fields
        - daemonSetName
        - deploymentName
        - hostName
        - namespace
        - nodeName
        - podName
        - serviceName
        - statefulSetName
      namespace_labels:
        - key: "*"
          tag_name: "namespace_labels_%s"
    # To enable fetching additional metadata using `owner` relationship
    owner_lookup_enabled: true
    ## Has to be false to enrich metadata
    passthrough: false
    pod_association:
      - from: build_hostname
{{ end }}

{{ if .Values.sumologic.logs.container.enabled }}
  ## logstransformprocessor is experimental, but the same functionality in transformprocessor doesn't offer robust enough error handling
  ## TODO: use transformprocessor here after https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/16519 is closed
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/logstransformprocessor
  logstransform/containers_parse_json:
    operators:
      - if: body matches "^{[\\s\\S]+"
        parse_from: body
        parse_to: body
        type: json_parser
{{ end }}

  ## ref: https://github.com/open-telemetry/opentelemetry-collector/tree/v0.76.1/processor/memorylimiterprocessor
  memory_limiter:
    ## check_interval is the time between measurements of memory usage for the
    ## purposes of avoiding going over the limits. Defaults to zero, so no
    ## checks will be performed. Values below 1 second are not recommended since
    ## it can result in unnecessary CPU consumption.
    check_interval: 5s
    ## Maximum amount of memory, in %, targeted to be allocated by the process heap.
    limit_percentage: 75
    ## Spike limit (calculated from available memory). Must be less than limit_percentage.
    spike_limit_percentage: 20

  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/resourceprocessor
  resource/add_cluster:
    attributes:
      - action: upsert
        key: cluster
        value: {{ .Values.sumologic.clusterName | quote }}

{{ if .Values.sumologic.logs.container.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/resourceprocessor
  resource/containers_copy_node_to_host:
    attributes:
      - action: upsert
        from_attribute: k8s.node.name
        key: k8s.pod.hostname
{{ end }}

{{ if .Values.sumologic.logs.container.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/resourceprocessor
  resource/drop_annotations:
    attributes:
      - action: delete
        pattern: ^pod_annotations_.*
{{ end }}

{{ if .Values.sumologic.logs.container.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/resourceprocessor
  resource/remove_pod_name:
    attributes:
      - action: delete
        key: pod_name
{{ end }}

{{ if .Values.sumologic.logs.container.enabled }}
  # As sourceprocessor can't set these attributes to be empty, we do it here instead
  # If they're defined to be anything else in sourceprocessor, those values will overwrite these
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/resourceprocessor
  resource/set_empty_source_metadata:
    attributes:
    - action: insert
      key: _sourceCategory
      value: ""
    - action: insert
      key: _sourceHost
      value: ""
    - action: insert
      key: _sourceName
      value: ""
{{ end }}

{{ if .Values.sumologic.logs.container.enabled }}
  ## ref: https://github.com/SumoLogic/sumologic-otel-collector/tree/main/pkg/processor/sourceprocessor
  source/containers:
    annotation_prefix: "pod_annotations_"
    collector: {{ .Values.sumologic.collectorName | default .Values.sumologic.clusterName | quote }}
    container_annotations:
      enabled: {{ .Values.sumologic.logs.container.perContainerAnnotationsEnabled }}
      prefixes: {{ toJson .Values.sumologic.logs.container.perContainerAnnotationPrefixes }}
    exclude:
      container: {{ .Values.sumologic.logs.container.excludeContainerRegex | quote }}
      namespace: {{ include "logs.excludeNamespaces" . }}
      node: {{ .Values.sumologic.logs.container.excludeHostRegex | quote }}
      pod: {{ .Values.sumologic.logs.container.excludePodRegex | quote }}
    pod_key: "pod"
    pod_name_key: "pod_name"
    pod_template_hash_key: "pod_labels_pod-template-hash"
    source_category: {{ .Values.sumologic.logs.container.sourceCategory | quote }}
    source_category_prefix: {{ .Values.sumologic.logs.container.sourceCategoryPrefix | quote }}
    source_category_replace_dash: {{ .Values.sumologic.logs.container.sourceCategoryReplaceDash | quote }}
    source_host: {{ .Values.sumologic.logs.container.sourceHost | quote }}
    source_name: {{ .Values.sumologic.logs.container.sourceName | quote }}
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/SumoLogic/sumologic-otel-collector/tree/main/pkg/processor/sourceprocessor
  source/kubelet:
    collector: {{ .Values.sumologic.collectorName | default .Values.sumologic.clusterName | quote }}
    source_host: "%{_sourceHost}"
    source_name: {{ .Values.sumologic.logs.kubelet.sourceName | quote }}
    source_category: {{ .Values.sumologic.logs.kubelet.sourceCategory | quote }}
    source_category_prefix: {{ .Values.sumologic.logs.kubelet.sourceCategoryPrefix | quote }}
    source_category_replace_dash: {{ .Values.sumologic.logs.kubelet.sourceCategoryReplaceDash | quote }}
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
  ## ref: https://github.com/SumoLogic/sumologic-otel-collector/tree/main/pkg/processor/sourceprocessor
  source/systemd:
    collector: {{ .Values.sumologic.collectorName | default .Values.sumologic.clusterName | quote }}
    source_category: {{ .Values.sumologic.logs.systemd.sourceCategory | quote }}
    source_category_prefix: {{ .Values.sumologic.logs.systemd.sourceCategoryPrefix | quote }}
    source_category_replace_dash: {{ .Values.sumologic.logs.systemd.sourceCategoryReplaceDash | quote }}
    source_host: "%{_sourceHost}"
    source_name: {{ .Values.sumologic.logs.systemd.sourceName | quote }}
{{ end }}

{{ if .Values.sumologic.logs.container.enabled }}
  ## ref: https://github.com/SumoLogic/sumologic-otel-collector/tree/main/pkg/processor/sumologicschemaprocessor
  sumologic_schema:
    add_cloud_namespace: false
{{ end }}

  ## Add timestamp to attributes
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/transformprocessor
  transform/add_timestamp:
    log_statements:
      - context: log
        statements:
          - set(attributes["timestamp"], Int(time_unix_nano / 1000000))

  ## Move attributes from the body to the record and drop the body if it's a map
  ## The map check isn't perfect, as there's no way to check for this explicitly in OTTL
  ## We always parse json earlier in the pipeline though, so this is safe
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/transformprocessor
  transform/flatten:
    log_statements:
      - context: log
        statements:
          - merge_maps(attributes, body, "insert")
          - set(body, "") where IsMatch(body, "^{") == true

  ## Remove all attributes, so body won't by nested by SumoLogic receiver in case of using otlp format
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/processor/transformprocessor
  transform/remove_attributes:
    log_statements:
      - context: log
        statements:
          - limit(attributes, 0, [])

{{- if .Values.sumologic.logs.container.otelcol.extraProcessors }}
{{- range $processor := .Values.sumologic.logs.container.otelcol.extraProcessors }}
{{ toYaml $processor | indent 2}}
{{- end }}
{{- end }}

receivers:
{{ if eq (include "logs.collector.fluentbit.enabled" .) "true" }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.76.1/receiver/fluentforwardreceiver
  fluentforward:
    endpoint: 0.0.0.0:24321
{{ end }}

{{ if or .Values.sumologic.logs.collector.otelcol.enabled .Values.sumologic.logs.collector.otelcloudwatch.enabled }}
  ## ref: https://github.com/open-telemetry/opentelemetry-collector/tree/v0.76.1/receiver/otlpreceiver
  otlp:
    protocols:
      http:
        endpoint: 0.0.0.0:4318
{{ end }}

service:
  extensions:
    - health_check
{{ if .Values.metadata.persistence.enabled }}
    - file_storage
{{ end }}
    - pprof
  pipelines:
{{ if eq (include "logs.collector.fluentbit.enabled" .) "true" }}
{{ if .Values.sumologic.logs.container.enabled }}
    logs/fluent/containers:
      exporters:
        - sumologic/containers
      processors:
        - memory_limiter
        - filter/include_fluent_tag_containers
        - attributes/fluent_containers
        - groupbyattrs/containers
        - k8s_tagger
        - resource/add_cluster
        - resource/set_empty_source_metadata
        - resource/containers_copy_node_to_host
        - sumologic_schema
        - source/containers
{{- if .Values.sumologic.logs.container.otelcol.extraProcessors }}
{{- range $processor := .Values.sumologic.logs.container.otelcol.extraProcessors }}
{{ printf "- %s" ( $processor | keys | first ) | indent 8 }}
{{- end }}
{{- end }}
        - resource/remove_pod_name
        - resource/drop_annotations
        - attributes/remove_fluent_tag
{{- if eq .Values.sumologic.logs.container.format "text" }} 
        - transform/remove_attributes
{{- else if eq .Values.sumologic.logs.container.format "json_merge" }} 
        - transform/flatten
{{- end }}
        - transform/add_timestamp
        - batch
      receivers:
        - fluentforward
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
    logs/fluent/kubelet:
      exporters:
        - sumologic/systemd
      processors:
        - memory_limiter
        - filter/include_fluent_tag_host
        - filter/include_kubelet
        - filter/exclude_kubelet_syslog
        - filter/exclude_kubelet_hostname
        - filter/exclude_kubelet_priority
        - filter/exclude_kubelet_unit
        - attributes/extract_systemd_source_fields
        - attributes/remove_fluent_tag
        - groupbyattrs/systemd
        - resource/add_cluster
        - source/kubelet
        - transform/add_timestamp
        - batch
      receivers:
        - fluentforward

    logs/fluent/systemd:
      exporters:
        - sumologic/systemd
      processors:
        - memory_limiter
        - filter/include_fluent_tag_host
        - filter/include_systemd
        - filter/exclude_kubelet
        - filter/exclude_systemd_syslog
        - filter/exclude_systemd_hostname
        - filter/exclude_systemd_priority
        - filter/exclude_systemd_unit
        - attributes/extract_systemd_source_fields
        - attributes/remove_fluent_tag
        - groupbyattrs/systemd
        - resource/add_cluster
        - source/systemd
        - transform/add_timestamp
        - batch
      receivers:
        - fluentforward
{{ end }}
{{ end }}

{{ if or .Values.sumologic.logs.collector.otelcol.enabled .Values.sumologic.logs.collector.otelcloudwatch.enabled }}
{{ if .Values.sumologic.logs.container.enabled }}
    ## This is the same pipeline like for logs/fluent/containers with the following modifications:
    ## - filter/include_fluent_tag_containers and attributes/remove_fluent_tag are being removed
    ##   as only containers log are being provided to otlp receiver
    ## - attributes/fluent_containers functionality is being replaced by otellogs operators
    logs/otlp/containers:
      exporters:
        - sumologic/containers
      processors:
        - memory_limiter
        - filter/include_containers
        - groupbyattrs/containers
        - k8s_tagger
        - resource/add_cluster
        - resource/set_empty_source_metadata
        - resource/containers_copy_node_to_host
        - sumologic_schema
        - source/containers
        - logstransform/containers_parse_json
{{- if .Values.sumologic.logs.container.otelcol.extraProcessors }}
{{- range $processor := .Values.sumologic.logs.container.otelcol.extraProcessors }}
{{ printf "- %s" ( $processor | keys | first ) | indent 8 }}
{{- end }}
{{- end }}
        - resource/remove_pod_name
        - resource/drop_annotations
{{- if eq .Values.sumologic.logs.container.format "text" }} 
        - transform/remove_attributes
{{- else if eq .Values.sumologic.logs.container.format "json_merge" }} 
        - transform/flatten
{{- end }}
        - transform/add_timestamp
        - batch
      receivers:
        - otlp
{{ end }}

{{ if .Values.sumologic.logs.systemd.enabled }}
    ## This is the same pipeline like logs/fluent/kubelet, but with the following changes:
    ## - otlp receiver instead of fluentforward
    ## - added transform/remove_attributes processor
    logs/otlp/kubelet:
      exporters:
        - sumologic/systemd
      processors:
        - memory_limiter
        - filter/include_fluent_tag_host
        - filter/include_kubelet
        - filter/exclude_kubelet_syslog
        - filter/exclude_kubelet_hostname
        - filter/exclude_kubelet_priority
        - filter/exclude_kubelet_unit
        - attributes/extract_systemd_source_fields
        - attributes/remove_fluent_tag
        - groupbyattrs/systemd
        - resource/add_cluster
        - source/kubelet
        - transform/remove_attributes
        - transform/flatten
        - transform/add_timestamp
        - batch
      receivers:
        - otlp

    ## This is the same pipeline like logs/fluent/systemd, but with the following changes:
    ## - otlp receiver instead of fluentforward
    ## - added transform/remove_attributes processor
    logs/otlp/systemd:
      exporters:
        - sumologic/systemd
      processors:
        - memory_limiter
        - filter/include_fluent_tag_host
        - filter/include_systemd
        - filter/exclude_kubelet
        - filter/exclude_systemd_syslog
        - filter/exclude_systemd_hostname
        - filter/exclude_systemd_priority
        - filter/exclude_systemd_unit
        - attributes/extract_systemd_source_fields
        - attributes/remove_fluent_tag
        - groupbyattrs/systemd
        - resource/add_cluster
        - source/systemd
        - transform/remove_attributes
        - transform/flatten
        - transform/add_timestamp
        - batch
      receivers:
        - otlp
{{ end }}
{{ end }}
  telemetry:
    logs:
      level: {{ .Values.metadata.logs.logLevel }}
