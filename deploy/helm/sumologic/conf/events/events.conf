{{- if .Values.fluentd.events.watchResourceEventsOverrides }}
{{- range $name, $version := .Values.fluentd.events.watchResourceEventsOverrides }}
<source>
  @type events
  deploy_namespace {{ $.Release.Namespace }}
  resource_name {{ $name }}
  api_version {{ $version }}
{{- if $.Values.fluentd.apiServerUrl }}
  kubernetes_url {{ $.Values.fluentd.apiServerUrl | quote }}
{{- end }}
</source>
{{- end }}
{{- else }}
<source>
  @type events
  deploy_namespace {{ .Release.Namespace }}
{{- if .Values.fluentd.apiServerUrl }}
  kubernetes_url {{ .Values.fluentd.apiServerUrl | quote }}
{{- end }}
</source>
{{- end }}
# Prevent fluentd from handling records containing its own logs.
<match fluentd.**>
  @type null
</match>
# Set `cluster` metadata field
<filter **>
  @type record_modifier
  <record>
    _sumo_metadata ${ {:fields => "cluster={{ template "sumologic.clusterNameReplaceSpaceWithDash" . }}"} }
  </record>
</filter>
# expose the Fluentd metrics to Prometheus
<source>
  @type prometheus
  metrics_path /metrics
  port 24231
</source>
<source>
  @type prometheus_output_monitor
</source>
<source>
  @type http
  port 9880
  bind 0.0.0.0
</source>
{{- if .Values.fluentd.monitoring.input }}
{{ include "fluentd.prometheus-metrics.input" (dict "Tag" "kubernetes.**") | nindent 2}}
{{- end }}
{{- if .Values.fluentd.events.overrideOutputConf }}
{{ .Values.fluentd.events.overrideOutputConf | nindent 4 }}
{{- else }}
<match kubernetes.**>
  @type copy
  <store>
    @type sumologic
    @id sumologic.endpoint.events
    sumo_client {{ include "sumologic.sumo_client" . | quote }}
    endpoint "#{ENV['SUMO_ENDPOINT_DEFAULT_EVENTS_SOURCE']}"
    source_name {{ .Values.fluentd.events.sourceName }}
    source_category {{ .Values.fluentd.events.sourceCategory | default (printf "%s/%s"  (include "sumologic.clusterNameReplaceSpaceWithDash" .) (.Values.fluentd.events.sourceName ))}}
    data_type logs
    disable_cookies true
    verify_ssl {{ .Values.fluentd.verifySsl | quote }}
    proxy_uri {{ .Values.fluentd.proxyUri | quote }}
    compress {{ .Values.fluentd.compression.enabled | quote }}
    compress_encoding {{ .Values.fluentd.compression.encoding | quote }}
    <buffer>
      {{- if or .Values.fluentd.persistence.enabled (eq .Values.fluentd.buffer.type "file") }}
      @type file
      path {{ .Values.fluentd.buffer.filePaths.events }}
      {{- else }}
      @type memory
      {{- end }}
      @include buffer.output.conf
    </buffer>
  </store>
  {{- if .Values.fluentd.monitoring.output }}
  {{ include "fluentd.prometheus-metrics.output" . | nindent 4 }}
  {{- end }}
</match>
{{- end }}
{{- if .Values.fluentd.logLevel }}
<system>
  log_level {{ .Values.fluentd.logLevel }}
</system>
{{- end }}
