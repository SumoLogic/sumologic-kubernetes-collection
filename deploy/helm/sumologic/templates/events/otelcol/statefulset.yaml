{{- if eq (include "events.otelcol.enabled" .) "true" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "sumologic.metadata.name.events.statefulset" . }}
  labels:
    app: {{ template "sumologic.labels.app.events.statefulset" . }}
    {{- include "sumologic.labels.common" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ template "sumologic.labels.app.events.pod" . }}
  serviceName: {{ template "sumologic.metadata.name.events.service-headless" . }}
  podManagementPolicy: "Parallel"
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/events/otelcol/configmap.yaml") . | sha256sum }}
{{- if .Values.sumologic.podAnnotations }}
{{ toYaml .Values.sumologic.podAnnotations | indent 8 }}
{{- end }}
{{- if .Values.otelevents.statefulset.podAnnotations }}
{{ toYaml .Values.otelevents.statefulset.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app: {{ template "sumologic.labels.app.events.pod" . }}
        {{- include "sumologic.labels.common" . | nindent 8 }}
{{- if .Values.sumologic.podLabels }}
{{ toYaml .Values.sumologic.podLabels | indent 8 }}
{{- end }}
{{- if .Values.otelevents.statefulset.podLabels }}
{{ toYaml .Values.otelevents.statefulset.podLabels | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ template "sumologic.metadata.name.roles.serviceaccount" . }}
{{- if .Values.otelevents.statefulset.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.otelevents.statefulset.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.otelevents.statefulset.tolerations }}
      tolerations:
{{ toYaml .Values.otelevents.statefulset.tolerations | indent 8 }}
{{- end }}
{{- if or .Values.otelevents.statefulset.affinity  .Values.otelevents.statefulset.podAntiAffinity }}
      affinity:
{{- if .Values.otelevents.statefulset.affinity }}
{{ toYaml .Values.otelevents.statefulset.affinity | indent 8 }}
{{- end }}
{{- if eq .Values.otelevents.statefulset.podAntiAffinity "hard"}}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "sumologic.labels.app.logs" . }}
                - {{ template "sumologic.labels.app.metrics" . }}
              - key: app
                operator: In
                values:
                - prometheus-operator-prometheus
            topologyKey: "kubernetes.io/hostname"
{{else if eq .Values.otelevents.statefulset.podAntiAffinity "soft"}}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "sumologic.labels.app.logs.pod" . }}
                  - {{ template "sumologic.labels.app.events.pod" . }}
                - key: app
                  operator: In
                  values:
                  - prometheus-operator-prometheus
              topologyKey: "kubernetes.io/hostname"
{{- end }}
{{- end }}
{{- if .Values.otelevents.statefulset.topologySpreadConstraints }}
      topologySpreadConstraints:
{{ toYaml .Values.otelevents.statefulset.topologySpreadConstraints | indent 6 }}
{{- end }}
      volumes:
      - name: config-volume
        configMap:
          name: {{ template "sumologic.metadata.name.events.configmap" . }}
{{- if .Values.otelevents.statefulset.extraVolumes }}
{{ toYaml .Values.otelevents.statefulset.extraVolumes | indent 6 }}
{{- end }}
      securityContext:
        {{- toYaml .Values.otelevents.statefulset.securityContext | nindent 8 }}
      {{- if .Values.otelevents.statefulset.priorityClassName }}
      priorityClassName: {{ .Values.otelevents.statefulset.priorityClassName | quote }}
      {{- end }}
      containers:
      - name: otelcol
        image: {{ .Values.otelevents.image.repository }}:{{ .Values.otelevents.image.tag }}
        imagePullPolicy: {{ .Values.otelevents.image.pullPolicy }}
        args:
          - --config=/etc/otel/config.yaml
        resources:
          {{- toYaml .Values.otelevents.statefulset.resources | nindent 10 }}
        {{- if .Values.otelevents.statefulset.containers.otelcol.securityContext }}
        securityContext:
          {{- toYaml .Values.otelevents.statefulset.containers.otelcol.securityContext | nindent 10 }}
        {{- end }}
        ports:
        - name: metrics
          containerPort: 8888
          protocol: TCP
        - name: pprof
          containerPort: 1777
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: 13133 # Health Check extension default port.
          {{- toYaml .Values.otelevents.statefulset.containers.otelcol.livenessProbe | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /
            port: 13133 # Health Check extension default port.
          {{- toYaml .Values.otelevents.statefulset.containers.otelcol.readinessProbe | nindent 10 }}
        startupProbe:
          httpGet:
            path: /
            port: 13133 # Health Check extension default port.
          {{- toYaml .Values.otelevents.statefulset.containers.otelcol.startupProbe | nindent 10 }}
        volumeMounts:
        - name: config-volume
          mountPath: /etc/otel/config.yaml
          subPath: config.yaml
{{- if .Values.otelevents.persistence.enabled }}
        - name: file-storage
          mountPath: /var/lib/storage/otc
{{- end}}
{{- if .Values.otelevents.statefulset.extraVolumeMounts }}
{{ toYaml .Values.otelevents.statefulset.extraVolumeMounts | indent 8 }}
{{- end }}
        env:
{{- $ctx := .Values -}}
{{- include "kubernetes.sources.envs" (dict "Context" $ctx "Type" "events") -}}
        {{- if .Values.otelevents.statefulset.extraEnvVars }}
{{ toYaml .Values.otelevents.statefulset.extraEnvVars | nindent 8 }}
        {{- end }}
{{- if .Values.otelevents.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: file-storage
{{- if .Values.otelevents.persistence.pvcLabels }}
      labels:
{{ toYaml .Values.otelevents.persistence.pvcLabels | indent 8 }}
{{- end }}
    spec:
      accessModes: [{{ .Values.otelevents.persistence.accessMode }}]
      storageClassName: {{ .Values.otelevents.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.otelevents.persistence.size }}
{{- end }}
{{- end }}
