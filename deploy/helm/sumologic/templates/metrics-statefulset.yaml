apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "sumologic.metadata.name.metrics.statefulset" . }}
  labels:
    app: {{ template "sumologic.labels.app.metrics.statefulset" . }}
    {{- include "sumologic.labels.common" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ template "sumologic.labels.app.metrics.pod" . }}
  serviceName: {{ template "sumologic.metadata.name.metrics.service-headless" . }}
  podManagementPolicy: "Parallel"
  replicas: {{ .Values.fluentd.metrics.statefulset.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "sumologic.labels.app.metrics.pod" . }}
        {{- include "sumologic.labels.common" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "sumologic.metadata.name.roles.serviceaccount" . }}
{{- if .Values.fluentd.metrics.statefulset.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.fluentd.metrics.statefulset.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.fluentd.metrics.statefulset.tolerations }}
      tolerations:
{{ toYaml .Values.fluentd.metrics.statefulset.tolerations | indent 8 }}
{{- end }}
{{- if or .Values.fluentd.metrics.statefulset.affinity  .Values.fluentd.metrics.statefulset.podAntiAffinity }}
      affinity:
{{- if .Values.fluentd.metrics.statefulset.affinity }}
{{ toYaml .Values.fluentd.metrics.statefulset.affinity | indent 8 }}
{{- end }}
{{- if eq .Values.fluentd.metrics.statefulset.podAntiAffinity "hard"}}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "sumologic.labels.app.logs" . }}
                - {{ template "sumologic.labels.app.metrics" . }}
              - key: app
                operator: In
                values:
                - prometheus-operator-prometheus
            topologyKey: "kubernetes.io/hostname"
{{else if eq .Values.fluentd.metrics.statefulset.podAntiAffinity "soft"}}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "sumologic.labels.app.logs.pod" . }}
                  - {{ template "sumologic.labels.app.metrics.pod" . }}
                - key: app
                  operator: In
                  values:
                  - prometheus-operator-prometheus
              topologyKey: "kubernetes.io/hostname"
{{- end }}
{{- end }}
      volumes:
      - name: pos-files
        hostPath:
          path: /var/run/fluentd-pos
          type: ""
      - name: config-volume
        configMap:
          name: {{ template "sumologic.metadata.name.metrics.configmap" . }}
      securityContext:
        fsGroup: {{ .Values.fluentd.securityContext.fsGroup }}
      containers:
      - name: fluentd
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          {{- toYaml .Values.fluentd.metrics.statefulset.resources | nindent 10 }}
        ports:
        - name: prom-write
          containerPort: 9888
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /fluentd.pod.healthcheck?json=%7B%22log%22%3A+%22health+check%22%7D
            port: 9880
          initialDelaySeconds: 300
          periodSeconds: 30
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /fluentd.pod.healthcheck?json=%7B%22log%22%3A+%22health+check%22%7D
            port: 9880
          initialDelaySeconds: 30
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /fluentd/etc/
        - name: pos-files
          mountPath: /mnt/pos/
{{- if .Values.fluentd.persistence.enabled }}
        - name: buffer
          mountPath: "/fluentd/buffer"
{{- end}}
        env:
        - name: SUMO_ENDPOINT_METRICS
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics
        - name: SUMO_ENDPOINT_METRICS_APISERVER
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-apiserver
        - name: SUMO_ENDPOINT_METRICS_KUBELET
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-kubelet
        - name: SUMO_ENDPOINT_METRICS_KUBE_CONTROLLER_MANAGER
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-kube-controller-manager
        - name: SUMO_ENDPOINT_METRICS_KUBE_SCHEDULER
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-kube-scheduler
        - name: SUMO_ENDPOINT_METRICS_KUBE_STATE
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-kube-state
        - name: SUMO_ENDPOINT_METRICS_NODE_EXPORTER
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics-node-exporter
        {{- if .Values.sumologic.traces.enabled }}
        - name: SUMO_ENDPOINT_TRACES
          value: {{ .Values.sumologic.traces.endpoint }}
        {{- end }}
        - name: ADDITIONAL_PLUGINS
          value: {{ join " " .Values.fluentd.additionalPlugins | quote }}
{{- if .Values.fluentd.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: buffer
    spec:
      accessModes: [{{ .Values.fluentd.persistence.accessMode }}]
      storageClassName: {{ .Values.fluentd.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.fluentd.persistence.size }}
{{- end }}