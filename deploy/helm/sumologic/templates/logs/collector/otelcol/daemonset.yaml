{{- if eq (include "logs.collector.otelcol.enabled" .) "true" }}
{{- $ctx := . }}
{{- $instance := "" -}}
{{- $daemonsets := list $.Values.otellogs.daemonset  -}}
{{- $daemonsets = concat $daemonsets $.Values.otellogs.additionalDaemonSets -}}
{{- range $counter, $value := $daemonsets }}
{{- if not (eq $counter 0) }}
{{- $instance = (printf "-%d" $counter ) }}
{{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ printf "%s%s" (include "sumologic.metadata.name.logs.collector.daemonset" $ctx) $instance }}
  labels:
    app: {{ template "sumologic.labels.app.logs.collector.daemonset" $ctx }}
    {{- include "sumologic.labels.common" $ctx | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ printf "%s%s" (include "sumologic.labels.app.logs.collector.pod" $ctx) $instance }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/logs/collector/otelcol/configmap.yaml") $ctx | sha256sum }}
{{- if $.Values.sumologic.podAnnotations }}
{{ toYaml $.Values.sumologic.podAnnotations | indent 8 }}
{{- end }}
{{- if $.Values.otellogs.daemonset.podAnnotations }}
{{ toYaml $.Values.otellogs.daemonset.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app.kubernetes.io/name: {{ printf "%s%s" (include "sumologic.labels.app.logs.collector.pod" $ctx) $instance }}
        app.kubernetes.io/app-name: {{ template "sumologic.labels.app.logs.collector.pod" $ctx }}
        {{- include "sumologic.labels.common" $ctx | nindent 8 }}
{{- if $.Values.sumologic.podLabels }}
{{ toYaml $.Values.sumologic.podLabels | indent 8 }}
{{- end }}
{{- if $.Values.otellogs.daemonset.podLabels }}
{{ toYaml $.Values.otellogs.daemonset.podLabels | indent 8 }}
{{- end }}
    spec:
{{- if .nodeSelector }}
      nodeSelector:
{{ toYaml .nodeSelector | indent 8 }}
{{- end }}
{{- if or .affinity }}
      affinity:
{{ toYaml .affinity | indent 8 }}
{{- end }}
{{- if $.Values.otellogs.daemonset.tolerations }}
      tolerations:
{{ toYaml $.Values.otellogs.daemonset.tolerations | indent 8 }}
{{- end }}
      securityContext:
        {{- toYaml $.Values.otellogs.daemonset.securityContext | nindent 8 }}
      {{- if $.Values.otellogs.daemonset.priorityClassName }}
      priorityClassName: {{ $.Values.otellogs.daemonset.priorityClassName | quote }}
      {{- else }}
      priorityClassName: {{ include "sumologic.metadata.name.priorityclass" $ctx | quote }}
      {{- end }}
      containers:
      - args:
        - --config=/etc/otelcol/config.yaml
        image: {{ $.Values.otellogs.image.repository }}:{{ $.Values.otellogs.image.tag }}
        imagePullPolicy: {{ $.Values.otellogs.image.pullPolicy }}
        name: otelcol
        livenessProbe:
          httpGet:
            path: /
            port: 13133 # Health Check extension default port.
        readinessProbe:
          httpGet:
            path: /
            port: 13133 # Health Check extension default port.
        resources:
          {{- toYaml $.Values.otellogs.daemonset.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/otelcol
          name: otelcol-config
        - mountPath: /var/log/pods
          name: varlogpods
          readOnly: true
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /var/lib/storage/otc
          name: file-storage
        - mountPath: /var/log/journal
          name: varlogjournal
          readOnly: true
{{- if $.Values.otellogs.daemonset.extraVolumeMounts }}
{{ toYaml $.Values.otellogs.daemonset.extraVolumeMounts | indent 8 }}
{{- end }}
        env:
        - name: LOGS_METADATA_SVC
          valueFrom:
            configMapKeyRef:
              name: sumologic-configmap
              key: metadataLogs
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{{- if $.Values.otellogs.daemonset.extraEnvVars }}
{{ toYaml $.Values.otellogs.daemonset.extraEnvVars | nindent 8 }}
{{- end }}
        securityContext:
          {{- toYaml $.Values.otellogs.daemonset.containers.otelcol.securityContext | nindent 10 }}
        ports:
        - name: pprof
          containerPort: 1777
          protocol: TCP
        - name: metrics
          containerPort: 8888
          protocol: TCP
      initContainers: # ensure the host path is owned by the otel user group
      - name: changeowner
        image: public.ecr.aws/docker/library/busybox:latest
        securityContext:
          {{- toYaml $.Values.otellogs.daemonset.initContainers.changeowner.securityContext | nindent 10 }}
        command:
        - "sh"
        - "-c"
        - |
          chown -R \
            {{ $.Values.otellogs.daemonset.securityContext.fsGroup }}:{{ $.Values.otellogs.daemonset.securityContext.fsGroup }} \
            /var/lib/storage/otc
        volumeMounts:
        - mountPath: /var/lib/storage/otc
          name: file-storage
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: config.yaml
            path: config.yaml
          name: {{ template "sumologic.metadata.name.logs.collector.configmap" $ctx }}
        name: otelcol-config
      - hostPath:
          path: /var/log/pods
          type: ""
        name: varlogpods
      - hostPath:
          path: /var/lib/docker/containers
          type: ""
        name: varlibdockercontainers
      - hostPath:
          path: /var/lib/otc
          type: DirectoryOrCreate
        name: file-storage
      - hostPath:
          path: /var/log/journal/
          type: ""
        name: varlogjournal
{{- if $.Values.otellogs.daemonset.extraVolumes }}
{{ toYaml $.Values.otellogs.daemonset.extraVolumes | indent 6 }}
{{- end }}
      serviceAccountName: {{ template "sumologic.metadata.name.logs.collector.serviceaccount" $ctx }}
{{- end }}
{{- end }}
