{{- if and (eq (include "metrics.otelcol.enabled" .) "true") .Values.sumologic.metrics.collector.otelcol.enabled }}
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: {{ template "sumologic.metadata.name.metrics.collector.opentelemetrycollector" . }}
  namespace: {{ template "sumologic.namespace"  . }}
  labels:
    {{- include "sumologic.labels.metrics.opentelemetrycollector" . | nindent 4 }}
    {{- include "sumologic.labels.common" . | nindent 4 }}
    {{- include "sumologic.label.scrape" . | nindent 4 }}
    {{- if .Values.sumologic.podLabels }}
    {{ toYaml .Values.sumologic.podLabels | nindent 4 }}
    {{- end }}
    {{- if .Values.sumologic.metrics.collector.otelcol.podLabels }}
    {{ toYaml .Values.sumologic.metrics.collector.otelcol.podLabels | nindent 4 }}
    {{- end }}
{{- if or .Values.sumologic.podAnnotations .Values.sumologic.metrics.collector.otelcol.podAnnotations }}
  annotations:
    {{- if .Values.sumologic.podAnnotations }}
    {{ toYaml .Values.sumologic.podAnnotations | nindent 4 }}
    {{- end }}
    {{- if .Values.sumologic.metrics.collector.otelcol.podAnnotations }}
    {{ toYaml .Values.sumologic.metrics.collector.otelcol.podAnnotations | nindent 4 }}
    {{- end }}
{{- end }}
spec:
  mode: statefulset
  replicas: {{ .Values.sumologic.metrics.collector.otelcol.replicaCount }}
  serviceAccount: {{ template "sumologic.metadata.name.metrics.collector.serviceaccount" . }}
  targetAllocator:
    serviceAccount: {{ template "sumologic.metadata.name.metrics.targetallocator.serviceaccount" . }}
    enabled: true
    prometheusCR:
      enabled: true
      serviceMonitorSelector:
        {{ .Values.sumologic.metrics.collector.otelcol.serviceMonitorSelector | toYaml | nindent 8 }}
      podMonitorSelector:
        {{ .Values.sumologic.metrics.collector.otelcol.podMonitorSelector | toYaml | nindent 8 }}
{{- if .Values.sumologic.metrics.collector.otelcol.nodeSelector }}
  nodeSelector:
{{ toYaml .Values.sumologic.metrics.collector.otelcol.nodeSelector | indent 4 }}
{{- end }}
{{- if .Values.sumologic.metrics.collector.otelcol.tolerations }}
  tolerations:
{{ toYaml .Values.sumologic.metrics.collector.otelcol.tolerations | indent 4 }}
{{- end }}
{{- if .Values.sumologic.metrics.collector.otelcol.priorityClassName }}
  priorityClassName: {{ .Values.sumologic.metrics.collector.otelcol.priorityClassName | quote }}
{{- end }}
{{- if .Values.sumologic.metrics.collector.otelcol.autoscaling.enabled }}
  autoscaler:
    maxReplicas: {{ .Values.sumologic.metrics.collector.otelcol.autoscaling.maxReplicas }}
    minReplicas: {{ .Values.sumologic.metrics.collector.otelcol.autoscaling.minReplicas }}
    targetCPUUtilization: {{ .Values.sumologic.metrics.collector.otelcol.autoscaling.targetCPUUtilizationPercentage }}
{{- if .Values.sumologic.metrics.collector.otelcol.autoscaling.targetMemoryUtilizationPercentage }}
    targetMemoryUtilization: {{ .Values.sumologic.metrics.collector.otelcol.autoscaling.targetMemoryUtilizationPercentage }}
{{- end }}
{{- end }}
  env:
  - name: METADATA_METRICS_SVC
    value: {{ template "sumologic.metadata.name.metrics.service" . }} # no need for remote write proxy here
  - name: NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace
  podSecurityContext:
    {{ .Values.sumologic.metrics.collector.otelcol.securityContext | toYaml | nindent 4 }}
  ports:
  - name: pprof
    port: 1777
  resources:
    {{ .Values.sumologic.metrics.collector.otelcol.resources | toYaml | nindent 4 }}
  volumes:
  - name: tmp
    emptyDir: {}
  - name: file-storage
    emptyDir: {}
  volumeMounts:
  - name: tmp
    mountPath: /tmp
  - name: file-storage
    mountPath: /var/lib/storage/otc
  config: |
{{- (tpl (.Files.Get "conf/metrics/collector/otelcol/config.yaml") .) | nindent 4 }}
{{- end }}
