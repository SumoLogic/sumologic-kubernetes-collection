{{- if .Values.sumologic.cleanupEnabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "sumologic.metadata.name.cleanup" . }}
  namespace: {{ template "sumologic.namespace"  . }}
  annotations:
{{ include "sumologic.annotations.app.cleanup.helmsh" "3" | indent 4 }}
  labels:
    app: {{ template "sumologic.metadata.name.cleanup" . }}
    {{- include "sumologic.labels.common" . | nindent 4 }}
spec:
  ttlSecondsAfterFinished: {{ .Values.sumologic.setup.job.ttlSecondsAfterFinished }}
  template:
    metadata:
      annotations:
{{- if .Values.sumologic.podAnnotations }}
{{ toYaml .Values.sumologic.podAnnotations | indent 8 }}
{{- end }}
      labels:
{{- if .Values.sumologic.podLabels }}
{{ toYaml .Values.sumologic.podLabels | indent 8 }}
{{- end }}
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ template "sumologic.metadata.name.cleanup.roles.serviceaccount" . }}
      volumes:
      - name: configmap
        configMap:
          name: {{ template "sumologic.metadata.name.cleanup.configmap" . }}
          defaultMode: 0777
      - name: cleanup
        emptyDir: {}
      initContainers:
      - name: copy-files
        image: {{ .Values.sumologic.setup.job.initContainerImage.repository }}:{{ .Values.sumologic.setup.job.initContainerImage.tag }}
        command: ['sh', '-c', 'cp /configmap/* /etc/terraform']
        volumeMounts:
          - name: configmap
            mountPath: /configmap
          - name: cleanup
            mountPath: /etc/terraform
      containers:
        - name: cleanup
          image: {{ .Values.sumologic.setup.job.image.repository }}:{{ .Values.sumologic.setup.job.image.tag }}
          imagePullPolicy: {{ .Values.sumologic.setup.job.image.pullPolicy }}
          volumeMounts:
          - name: cleanup
            mountPath: /etc/terraform
          command: ["/etc/terraform/cleanup.sh"]
          envFrom:
          - secretRef:
              name: {{ .Values.sumologic.envFromSecret | default (include "sumologic.metadata.name.cleanup.secret" .)}}
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SUMOLOGIC_BASE_URL
{{- if eq (include "sumologic-mock.local-mode-enabled" .) "true" }}
            value: http://{{ template "sumologic-mock.hostname" . }}:{{ template "sumologic-mock.port" . }}/terraform/api/
{{- else }}
            value: {{ .Values.sumologic.endpoint }}
{{- end }}
          - name: SUMOLOGIC_COLLECTOR_NAME
            value: {{ include "terraform.collector.name" . }}
          - name: CHART_VERSION
            value: "{{ .Chart.Version }}"
          - name: SUMOLOGIC_SECRET_NAME
            value: "{{ template "terraform.secret.name" }}"
          {{- include "proxy-env-variables" . | nindent 10 }}
      securityContext:
        runAsUser: 1000
{{- end }}
