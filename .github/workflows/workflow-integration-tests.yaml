on:
  workflow_call:

env:
  KIND_VERSION: 0.22.0

jobs:
  setup-integration-tests:
    runs-on: ubuntu-22.04
    outputs:
      kind_images: ${{ steps.set_kind_images.outputs.kind_images }}
      default_kind_image: ${{ steps.set_kind_images.outputs.default_kind_image }}
      test_names_onlylatest: ${{ steps.set_test_names.outputs.test_names_onlylatest }}
      test_names_allversions: ${{ steps.set_test_names.outputs.test_names_allversions }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          cache-dependency-path: "**/go.sum"
      - id: set_kind_images
        name: Set kind images
        working-directory: ./tests/integration/
        run: |
          echo "kind_images=$(jq -cM '.supported' kind_images.json)" >> $GITHUB_OUTPUT
          echo "default_kind_image=$(jq -cM '.default' kind_images.json)" >> $GITHUB_OUTPUT
      - name: Print kind images
        run: echo "Kind images ${{ steps.set_kind_images.outputs.kind_images }}"
      - id: set_test_names
        name: Set test names
        working-directory: ./tests/integration/
        run: |
          echo "test_names_allversions=$(make list-tests-allversions | jq -R . | jq -cs .)" >> $GITHUB_OUTPUT
          echo "test_names_onlylatest=$(make list-tests-onlylatest | jq -R . | jq -cs .)" >> $GITHUB_OUTPUT
      - name: Print test names
        run: |
          echo "Test names running on all K8s versions ${{ steps.set_test_names.outputs.test_names_allversions }}"
          echo "Test names running only on latest K8s version ${{ steps.set_test_names.outputs.test_names_onlylatest }}"

  lint-integration-tests:
    name: Lint integration tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.57.1
          working-directory: ./tests/integration/
          # Optional: golangci-lint command line arguments.
          args: --timeout=10m --verbose

  integration-tests-onlylatest:
    runs-on: ubuntu-22.04
    name: IT - ${{ matrix.test_name }} - ${{ needs.setup-integration-tests.outputs.default_kind_image }}
    needs:
      - setup-integration-tests
    strategy:
      matrix:
        kind_image:
          - ${{ needs.setup-integration-tests.outputs.default_kind_image }}
        test_name: ${{ fromJSON(needs.setup-integration-tests.outputs.test_names_onlylatest) }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          cache-dependency-path: "**/go.sum"
      - name: Setup kind
        run: |
          curl --retry 10 --retry-max-time 120 --retry-delay 5 -Lo ./kind https://kind.sigs.k8s.io/dl/v${{env.KIND_VERSION}}/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
      - name: Run integration test - ${{ matrix.test_name }}
        working-directory: ./tests/integration/
        run: make test TEST_NAME=^${{matrix.test_name}}$ KIND_NODE_IMAGE=${{matrix.kind_image}}

  integration-tests-allversions:
    runs-on: ubuntu-22.04
    name: IT - ${{ matrix.test_name }} - ${{ matrix.kind_image }}
    needs:
      - setup-integration-tests
    strategy:
      matrix:
        kind_image: ${{ fromJSON(needs.setup-integration-tests.outputs.kind_images) }}
        test_name: ${{ fromJSON(needs.setup-integration-tests.outputs.test_names_allversions) }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          cache-dependency-path: "**/go.sum"
      - name: Setup kind
        run: |
          curl --retry 10 --retry-max-time 120 --retry-delay 5 -Lo ./kind https://kind.sigs.k8s.io/dl/v${{env.KIND_VERSION}}/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
      - name: Run integration test - ${{ matrix.test_name }}
        working-directory: ./tests/integration/
        run: make test TEST_NAME=^${{matrix.test_name}}$ KIND_NODE_IMAGE=${{matrix.kind_image}}

  integration-test-status:
    runs-on: ubuntu-22.04
    if: ${{ always() }}
    needs:
      - integration-tests-allversions
      - integration-tests-onlylatest
    steps:
      - name: Tests passed
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Tests failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
