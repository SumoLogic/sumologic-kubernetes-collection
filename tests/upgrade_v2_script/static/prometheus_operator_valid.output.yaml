kube-prometheus-stack:
  prometheusOperator:
    tls:
      enabled: false
    podLabels: {}
    podAnnotations: {}
    resources: {}
    admissionWebhooks:
      enabled: false
  prometheus:
    prometheusSpec:
      scrapeInterval: 30s
      retention: 1d
      podMetadata:
        labels: {}
        annotations: {}
      resources:
        limits:
          cpu: 2000m
          memory: 8Gi
        requests:
          cpu: 500m
          memory: 1Gi
      thanos:
        baseImage: quay.io/thanos/thanos
        version: v0.10.0
        resources:
          limits:
            cpu: 10m
            memory: 32Mi
          requests:
            cpu: 1m
            memory: 8Mi
      containers:
        - name: thanos-sidecar
        - name: config-reloader
          env:
            - name: CHART
              valueFrom:
                configMapKeyRef:
                  name: sumologic-configmap
                  key: fluentdMetrics
            - name: NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: sumologic-configmap
                  key: fluentdNamespace
  additionalPrometheusRulesMap:
    pre-1.14-node-rules:
      groups:
        - name: node-pre-1.14.rules
          rules:
            - expr: 1 - avg(rate(node_cpu_seconds_total{job="node-exporter",mode="idle"}[1m]))
              record: :node_cpu_utilisation:avg1m
            - expr: |-
                1 - avg by (node) (
                  rate(node_cpu_seconds_total{job="node-exporter",mode="idle"}[1m])
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:)
              record: node:node_cpu_utilisation:avg1m
            - expr: |-
                1 -
                sum(
                  node_memory_MemFree_bytes{job="node-exporter"} +
                  node_memory_Cached_bytes{job="node-exporter"} +
                  node_memory_Buffers_bytes{job="node-exporter"}
                )
                /
                sum(node_memory_MemTotal_bytes{job="node-exporter"})
              record: ':node_memory_utilisation:'
            - expr: |-
                (node:node_memory_bytes_total:sum - node:node_memory_bytes_available:sum)
                /
                node:node_memory_bytes_total:sum
              record: node:node_memory_utilisation:ratio
            - expr: |-
                1 -
                sum by (node) (
                  (
                    node_memory_MemFree_bytes{job="node-exporter"} +
                    node_memory_Cached_bytes{job="node-exporter"} +
                    node_memory_Buffers_bytes{job="node-exporter"}
                  )
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
                /
                sum by (node) (
                  node_memory_MemTotal_bytes{job="node-exporter"}
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
              record: 'node:node_memory_utilisation:'
            - expr: 1 - (node:node_memory_bytes_available:sum / node:node_memory_bytes_total:sum)
              record: 'node:node_memory_utilisation_2:'
            - expr: |-
                max by (instance, namespace, pod, device) ((node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
                - node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
                / node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
              record: 'node:node_filesystem_usage:'
            - expr: |-
                sum by (node) (
                  node_memory_MemTotal_bytes{job="node-exporter"}
                  * on (namespace, pod) group_left(node)
                    node_namespace_pod:kube_pod_info:
                )
              record: node:node_memory_bytes_total:sum
            - expr: |-
                sum(irate(node_network_receive_bytes_total{job="node-exporter",device!~"veth.+"}[1m])) +
                sum(irate(node_network_transmit_bytes_total{job="node-exporter",device!~"veth.+"}[1m]))
              record: :node_net_utilisation:sum_irate
            - expr: |-
                sum by (node) (
                  (irate(node_network_receive_bytes_total{job="node-exporter",device!~"veth.+"}[1m]) +
                  irate(node_network_transmit_bytes_total{job="node-exporter",device!~"veth.+"}[1m]))
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
              record: node:node_net_utilisation:sum_irate
            - expr: |-
                sum(irate(node_network_receive_drop_total{job="node-exporter",device!~"veth.+"}[1m])) +
                sum(irate(node_network_transmit_drop_total{job="node-exporter",device!~"veth.+"}[1m]))
              record: :node_net_saturation:sum_irate
            - expr: |-
                sum by (node) (
                  (irate(node_network_receive_drop_total{job="node-exporter",device!~"veth.+"}[1m]) +
                  irate(node_network_transmit_drop_total{job="node-exporter",device!~"veth.+"}[1m]))
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
              record: node:node_net_saturation:sum_irate
            - expr: |-
                max by (instance, namespace, pod, device) ((node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
                - node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
                / node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
              record: 'node:node_filesystem_usage:'
            - expr: |-
                sum(node_load1{job="node-exporter"})
                /
                sum(node:node_num_cpu:sum)
              record: ':node_cpu_saturation_load1:'
            - expr: |-
                sum by (node) (
                  node_load1{job="node-exporter"}
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
                /
                node:node_num_cpu:sum
              record: 'node:node_cpu_saturation_load1:'
            - expr: avg(irate(node_disk_io_time_weighted_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m]))
              record: :node_disk_saturation:avg_irate
            - expr: |-
                avg by (node) (
                  irate(node_disk_io_time_weighted_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m])
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
              record: node:node_disk_saturation:avg_irate
            - expr: avg(irate(node_disk_io_time_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m]))
              record: :node_disk_utilisation:avg_irate
            - expr: |-
                avg by (node) (
                  irate(node_disk_io_time_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m])
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
              record: node:node_disk_utilisation:avg_irate
            - expr: |-
                1e3 * sum(
                  (rate(node_vmstat_pgpgin{job="node-exporter"}[1m])
                + rate(node_vmstat_pgpgout{job="node-exporter"}[1m]))
                )
              record: :node_memory_swap_io_bytes:sum_rate
            - expr: |-
                1e3 * sum by (node) (
                  (rate(node_vmstat_pgpgin{job="node-exporter"}[1m])
                + rate(node_vmstat_pgpgout{job="node-exporter"}[1m]))
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
              record: node:node_memory_swap_io_bytes:sum_rate
            - expr: |-
                node:node_cpu_utilisation:avg1m
                  *
                node:node_num_cpu:sum
                  /
                scalar(sum(node:node_num_cpu:sum))
              record: node:cluster_cpu_utilisation:ratio
            - expr: |-
                (node:node_memory_bytes_total:sum - node:node_memory_bytes_available:sum)
                /
                scalar(sum(node:node_memory_bytes_total:sum))
              record: node:cluster_memory_utilisation:ratio
            - expr: |-
                sum by (node) (
                  node_load1{job="node-exporter"}
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
                /
                node:node_num_cpu:sum
              record: 'node:node_cpu_saturation_load1:'
            - expr: |-
                max by (instance, namespace, pod, device) (
                  node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
                  /
                  node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
                  )
              record: 'node:node_filesystem_avail:'
            - expr: |-
                max by (instance, namespace, pod, device) ((node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
                - node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
                / node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
              record: 'node:node_filesystem_usage:'
            - expr: |-
                max(
                  max(
                    kube_pod_info{job="kube-state-metrics", host_ip!=""}
                  ) by (node, host_ip)
                  * on (host_ip) group_right (node)
                  label_replace(
                    (
                      max(node_filesystem_files{job="node-exporter", mountpoint="/"})
                      by (instance)
                    ), "host_ip", "$1", "instance", "(.*):.*"
                  )
                ) by (node)
              record: 'node:node_inodes_total:'
            - expr: |-
                max(
                  max(
                    kube_pod_info{job="kube-state-metrics", host_ip!=""}
                  ) by (node, host_ip)
                  * on (host_ip) group_right (node)
                  label_replace(
                    (
                      max(node_filesystem_files_free{job="node-exporter", mountpoint="/"})
                      by (instance)
                    ), "host_ip", "$1", "instance", "(.*):.*"
                  )
                ) by (node)
              record: 'node:node_inodes_free:'
sumologic:
  accessId: dummy
  accessKey: dummy
  endpoint: http://dummy.com/
telegraf-operator:
  enabled: true
  replicaCount: 1
