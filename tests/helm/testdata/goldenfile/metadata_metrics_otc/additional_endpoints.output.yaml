---
# Source: sumologic/templates/metrics/otelcol/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-sumologic-otelcol-metrics
  labels:
    app: RELEASE-NAME-sumologic-otelcol-metrics
    chart: "sumologic-%CURRENT_CHART_VERSION%"
    release: "RELEASE-NAME"
    heritage: "Helm"
data:
  config.yaml: |
    exporters:
      sumologic/apiserver:
        endpoint: ${SUMO_ENDPOINT_APISERVER_METRICS_SOURCE}
        max_request_body_size: 16777216
        metric_format: prometheus
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 10000
          storage: file_storage
        timeout: 30s
      sumologic/control_plane:
        endpoint: ${SUMO_ENDPOINT_CONTROL_PLANE_METRICS_SOURCE}
        max_request_body_size: 16777216
        metric_format: prometheus
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 10000
          storage: file_storage
        timeout: 30s
      sumologic/controller:
        endpoint: ${SUMO_ENDPOINT_CONTROLLER_METRICS_SOURCE}
        max_request_body_size: 16777216
        metric_format: prometheus
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 10000
          storage: file_storage
        timeout: 30s
      sumologic/default:
        endpoint: ${SUMO_ENDPOINT_DEFAULT_METRICS_SOURCE}
        max_request_body_size: 16777216
        metric_format: prometheus
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 10000
          storage: file_storage
        timeout: 30s
      sumologic/kubelet:
        endpoint: ${SUMO_ENDPOINT_KUBELET_METRICS_SOURCE}
        max_request_body_size: 16777216
        metric_format: prometheus
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 10000
          storage: file_storage
        timeout: 30s
      sumologic/node:
        endpoint: ${SUMO_ENDPOINT_NODE_METRICS_SOURCE}
        max_request_body_size: 16777216
        metric_format: prometheus
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 10000
          storage: file_storage
        timeout: 30s
      sumologic/scheduler:
        endpoint: ${SUMO_ENDPOINT_SCHEDULER_METRICS_SOURCE}
        max_request_body_size: 16777216
        metric_format: prometheus
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 10000
          storage: file_storage
        timeout: 30s
      sumologic/state:
        endpoint: ${SUMO_ENDPOINT_STATE_METRICS_SOURCE}
        max_request_body_size: 16777216
        metric_format: prometheus
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 10000
          storage: file_storage
        timeout: 30s
    extensions:
      file_storage:
        compaction:
          directory: /tmp
          on_rebound: true
        directory: /var/lib/storage/otc
        timeout: 10s
      health_check: {}
      pprof: {}
    processors:
      batch:
        send_batch_max_size: 2048
        send_batch_size: 1024
        timeout: 1s
      groupbyattrs:
        keys:
        - container
        - namespace
        - pod
        - service
      k8s_tagger:
        extract:
          delimiter: _
          labels:
          - key: '*'
            tag_name: pod_labels_%s
          metadata:
          - daemonSetName
          - deploymentName
          - nodeName
          - replicaSetName
          - serviceName
          - statefulSetName
        owner_lookup_enabled: true
        passthrough: false
        pod_association:
        - from: build_hostname
      memory_limiter:
        check_interval: 5s
        limit_percentage: 75
        spike_limit_percentage: 20
      metricstransform:
        transforms:
          action: update
          include: ^prometheus_remote_write_(.*)$$
          match_type: regexp
          new_name: $$1
      resource:
        attributes:
        - action: upsert
          from_attribute: namespace
          key: k8s.namespace.name
        - action: delete
          key: namespace
        - action: upsert
          from_attribute: pod
          key: k8s.pod.name
        - action: delete
          key: pod
        - action: upsert
          from_attribute: container
          key: k8s.container.name
        - action: delete
          key: container
        - action: upsert
          from_attribute: service
          key: prometheus_service
        - action: delete
          key: service
        - action: upsert
          from_attribute: service.name
          key: job
        - action: delete
          key: service.name
        - action: upsert
          key: _origin
          value: kubernetes
        - action: upsert
          key: cluster
          value: kubernetes
      resource/delete_source_metadata:
        attributes:
        - action: delete
          key: _sourceCategory
        - action: delete
          key: _sourceHost
        - action: delete
          key: _sourceName
      resource/remove_k8s_pod_pod_name:
        attributes:
        - action: delete
          key: k8s.pod.pod_name
      routing:
        attribute_source: resource
        default_exporters:
        - sumologic/default
        drop_resource_routing_attribute: true
        from_attribute: http_listener_v2_path
        table:
        - exporters:
          - sumologic/apiserver
          value: /prometheus.metrics.apiserver
        - exporters:
          - sumologic/kubelet
          value: /prometheus.metrics.container
        - exporters:
          - sumologic/control_plane
          value: /prometheus.metrics.control-plane.coredns
        - exporters:
          - sumologic/control_plane
          value: /prometheus.metrics.control-plane.kube-etcd
        - exporters:
          - sumologic/controller
          value: /prometheus.metrics.controller-manager
        - exporters:
          - sumologic/kubelet
          value: /prometheus.metrics.kubelet
        - exporters:
          - sumologic/node
          value: /prometheus.metrics.node
        - exporters:
          - sumologic/scheduler
          value: /prometheus.metrics.scheduler
        - exporters:
          - sumologic/state
          value: /prometheus.metrics.state
      source:
        collector: kubernetes
      sumologic_schema:
        add_cloud_namespace: false
    receivers:
      telegraf:
        agent_config: |
          [agent]
            interval = "30s"
            flush_interval = "30s"
            omit_hostname = true
          [[inputs.http_listener_v2]]
            # wait longer than prometheus
            read_timeout = "30s"
            write_timeout = "30s"
            service_address = ":9888"
            data_format = "prometheusremotewrite"
            path_tag = true
            paths = [
              "/prometheus.metrics",
              "/prometheus.metrics.apiserver",
              "/prometheus.metrics.applications.activemq",
              "/prometheus.metrics.applications.apache",
              "/prometheus.metrics.applications.cassandra",
              "/prometheus.metrics.applications.couchbase",
              "/prometheus.metrics.applications.custom",
              "/prometheus.metrics.applications.elasticsearch",
              "/prometheus.metrics.applications.haproxy",
              "/prometheus.metrics.applications.jmx",
              "/prometheus.metrics.applications.kafka",
              "/prometheus.metrics.applications.memcached",
              "/prometheus.metrics.applications.mongodb",
              "/prometheus.metrics.applications.mysql",
              "/prometheus.metrics.applications.nginx",
              "/prometheus.metrics.applications.nginx-ingress",
              "/prometheus.metrics.applications.postgresql",
              "/prometheus.metrics.applications.rabbitmq",
              "/prometheus.metrics.applications.redis",
              "/prometheus.metrics.applications.sqlserver",
              "/prometheus.metrics.applications.squidproxy",
              "/prometheus.metrics.applications.tomcat",
              "/prometheus.metrics.applications.varnish",
              "/prometheus.metrics.container",
              "/prometheus.metrics.control-plane.coredns",
              "/prometheus.metrics.control-plane.kube-etcd",
              "/prometheus.metrics.controller-manager",
              "/prometheus.metrics.custom",
              "/prometheus.metrics.kubelet",
              "/prometheus.metrics.node",
              "/prometheus.metrics.operator.rule",
              "/prometheus.metrics.others",
              "/prometheus.metrics.scheduler",
              "/prometheus.metrics.state"
            ]
    service:
      extensions:
      - health_check
      - file_storage
      - pprof
      pipelines:
        metrics:
          exporters:
          - sumologic/default
          - sumologic/apiserver
          - sumologic/control_plane
          - sumologic/controller
          - sumologic/kubelet
          - sumologic/node
          - sumologic/scheduler
          - sumologic/state
          processors:
          - memory_limiter
          - metricstransform
          - groupbyattrs
          - resource
          - k8s_tagger
          - source
          - resource/remove_k8s_pod_pod_name
          - resource/delete_source_metadata
          - sumologic_schema
          - batch
          - routing
          receivers:
          - telegraf
      telemetry:
        logs:
          level: info
