---
# Source: sumologic/templates/metrics/otelcol/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-sumologic-otelcol-metrics
  namespace: sumologic
  labels:
    app: RELEASE-NAME-sumologic-otelcol-metrics
    chart: "sumologic-%CURRENT_CHART_VERSION%"
    release: "RELEASE-NAME"
    heritage: "Helm"
data:
  config.yaml: |
    exporters:
      sumologic/default:
        endpoint: ${SUMO_ENDPOINT_DEFAULT_OTLP_METRICS_SOURCE}
        max_request_body_size: 16777216
        metric_format: otlp
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 10000
          storage: file_storage
        timeout: 30s
    extensions:
      file_storage:
        compaction:
          directory: /tmp
          on_rebound: true
        directory: /var/lib/storage/otc
        timeout: 10s
      health_check: {}
      pprof: {}
    processors:
      batch:
        send_batch_max_size: 2048
        send_batch_size: 1024
        timeout: 1s
      groupbyattrs:
        keys:
        - container
        - namespace
        - pod
        - service
      groupbyattrs/group_by_name:
        keys:
        - __name__
        - job
      k8s_tagger:
        extract:
          delimiter: _
          labels:
          - key: '*'
            tag_name: pod_labels_%s
          metadata:
          - daemonSetName
          - deploymentName
          - nodeName
          - replicaSetName
          - serviceName
          - statefulSetName
        owner_lookup_enabled: true
        passthrough: false
        pod_association:
        - from: build_hostname
      memory_limiter:
        check_interval: 5s
        limit_percentage: 75
        spike_limit_percentage: 20
      metricstransform:
        transforms:
          action: update
          include: ^prometheus_remote_write_(.*)$$
          match_type: regexp
          new_name: $$1
      resource:
        attributes:
        - action: upsert
          from_attribute: namespace
          key: k8s.namespace.name
        - action: delete
          key: namespace
        - action: upsert
          from_attribute: pod
          key: k8s.pod.name
        - action: delete
          key: pod
        - action: upsert
          from_attribute: container
          key: k8s.container.name
        - action: delete
          key: container
        - action: upsert
          from_attribute: service
          key: prometheus_service
        - action: delete
          key: service
        - action: upsert
          from_attribute: service.name
          key: job
        - action: delete
          key: service.name
        - action: upsert
          key: _origin
          value: kubernetes
        - action: upsert
          key: cluster
          value: kubernetes
      resource/delete_source_metadata:
        attributes:
        - action: delete
          key: _sourceCategory
        - action: delete
          key: _sourceHost
        - action: delete
          key: _sourceName
      resource/remove_k8s_pod_pod_name:
        attributes:
        - action: delete
          key: k8s.pod.pod_name
      source:
        collector: kubernetes
        exclude:
          k8s.namespace.name: ""
      sumologic_schema:
        add_cloud_namespace: false
      transform/drop_routing_attribute:
        error_mode: ignore
        metric_statements:
        - context: resource
          statements:
          - delete_key(attributes, "http_listener_v2_path")
      transform/remove_name:
        error_mode: ignore
        metric_statements:
        - context: resource
          statements:
          - delete_key(attributes, "__name__")
      transform/set_name:
        error_mode: ignore
        metric_statements:
        - context: datapoint
          statements:
          - set(attributes["__name__"], metric.name) where IsMatch(metric.name, "^cloudprovider_.*")
    receivers:
      otlp:
        protocols:
          http:
            endpoint: 0.0.0.0:4318
      telegraf:
        agent_config: |
          [agent]
            interval = "30s"
            flush_interval = "30s"
            omit_hostname = true
          [[inputs.http_listener_v2]]
            # wait longer than prometheus
            read_timeout = "30s"
            write_timeout = "30s"
            service_address = ":9888"
            data_format = "prometheusremotewrite"
            path_tag = true
            paths = [
              "/prometheus.metrics",
              "/prometheus.metrics.applications.activemq",
              "/prometheus.metrics.applications.apache",
              "/prometheus.metrics.applications.cassandra",
              "/prometheus.metrics.applications.couchbase",
              "/prometheus.metrics.applications.custom",
              "/prometheus.metrics.applications.elasticsearch",
              "/prometheus.metrics.applications.haproxy",
              "/prometheus.metrics.applications.jmx",
              "/prometheus.metrics.applications.kafka",
              "/prometheus.metrics.applications.memcached",
              "/prometheus.metrics.applications.mongodb",
              "/prometheus.metrics.applications.mysql",
              "/prometheus.metrics.applications.nginx",
              "/prometheus.metrics.applications.nginx-ingress",
              "/prometheus.metrics.applications.postgresql",
              "/prometheus.metrics.applications.rabbitmq",
              "/prometheus.metrics.applications.redis",
              "/prometheus.metrics.applications.sqlserver",
              "/prometheus.metrics.applications.squidproxy",
              "/prometheus.metrics.applications.tomcat",
              "/prometheus.metrics.applications.varnish",
              "/prometheus.metrics.node"
            ]
    service:
      extensions:
      - health_check
      - file_storage
      - pprof
      pipelines:
        metrics:
          exporters:
          - sumologic/default
          processors:
          - memory_limiter
          - metricstransform
          - groupbyattrs
          - resource
          - k8s_tagger
          - source
          - resource/remove_k8s_pod_pod_name
          - resource/delete_source_metadata
          - sumologic_schema
          - transform/set_name
          - groupbyattrs/group_by_name
          - transform/remove_name
          - batch
          - transform/drop_routing_attribute
          receivers:
          - telegraf
          - otlp
      telemetry:
        logs:
          level: info
