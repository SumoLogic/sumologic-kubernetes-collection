---
# Source: sumologic/templates/logs/otelcol/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-sumologic-otelcol-logs
  labels:
    app: RELEASE-NAME-sumologic-otelcol-logs
    chart: "sumologic-%CURRENT_CHART_VERSION%"
    release: "RELEASE-NAME"
    heritage: "Helm"
data:
  config.yaml: |
    exporters:
      sumologic/containers:
        endpoint: ${SUMO_ENDPOINT_DEFAULT_LOGS_SOURCE}
        json_logs:
          add_timestamp: false
        log_format: json
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 10000
          storage: file_storage
      sumologic/systemd:
        endpoint: ${SUMO_ENDPOINT_DEFAULT_LOGS_SOURCE}
        json_logs:
          add_timestamp: false
        log_format: json
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 10000
          storage: file_storage
    extensions:
      file_storage:
        compaction:
          directory: /tmp
          on_rebound: true
        directory: /var/lib/storage/otc
        timeout: 10s
      health_check: {}
      pprof: {}
    processors:
      attributes/extract_systemd_source_fields:
        actions:
        - action: extract
          key: fluent.tag
          pattern: ^host\.(?P<_sourceName>[a-zA-z0-9]+)\..+$
        - action: insert
          from_attribute: _HOSTNAME
          key: _sourceHost
      attributes/fluent_containers:
        actions:
        - action: extract
          key: fluent.tag
          pattern: ^containers\.var\.log\.containers\.(?P<k8s_pod_name>[^_]+)_(?P<k8s_namespace>[^_]+)_(?P<k8s_container_name>.+)-(?P<container_id>[a-f0-9]{64})\.log$
        - action: insert
          from_attribute: container_id
          key: k8s.container.id
        - action: delete
          key: container_id
        - action: insert
          from_attribute: k8s_pod_name
          key: k8s.pod.name
        - action: delete
          key: k8s_pod_name
        - action: insert
          from_attribute: k8s_namespace
          key: k8s.namespace.name
        - action: delete
          key: k8s_namespace
        - action: insert
          from_attribute: k8s_container_name
          key: k8s.container.name
        - action: delete
          key: k8s_container_name
      attributes/remove_fluent_tag:
        actions:
        - action: delete
          key: fluent.tag
      batch:
        send_batch_max_size: 2048
        send_batch_size: 1024
        timeout: 1s
      filter/exclude_kubelet:
        logs:
          exclude:
            match_type: strict
            record_attributes:
            - key: _SYSTEMD_UNIT
              value: kubelet.service
      filter/exclude_kubelet_hostname:
        logs:
          exclude:
            match_type: regexp
            record_attributes:
            - key: _HOSTNAME
              value: my_kubelet_excludeHostRegex
      filter/exclude_kubelet_priority:
        logs:
          exclude:
            match_type: regexp
            record_attributes:
            - key: PRIORITY
              value: my_kubelet_excludePriorityRegex
      filter/exclude_kubelet_syslog:
        logs:
          exclude:
            match_type: regexp
            record_attributes:
            - key: SYSLOG_FACILITY
              value: my_kubelet_excludeFacilityRegex
      filter/exclude_kubelet_unit:
        logs:
          exclude:
            match_type: regexp
            record_attributes:
            - key: _SYSTEMD_UNIT
              value: my_kubelet_excludeUnitRegex
      filter/exclude_systemd_hostname:
        logs:
          exclude:
            match_type: regexp
            record_attributes:
            - key: _HOSTNAME
              value: my_systemd_excludeHostRegex
      filter/exclude_systemd_priority:
        logs:
          exclude:
            match_type: regexp
            record_attributes:
            - key: PRIORITY
              value: my_systemd_excludePriorityRegex
      filter/exclude_systemd_syslog:
        logs:
          exclude:
            match_type: regexp
            record_attributes:
            - key: SYSLOG_FACILITY
              value: my_systemd_excludeFacilityRegex
      filter/exclude_systemd_unit:
        logs:
          exclude:
            match_type: regexp
            record_attributes:
            - key: _SYSTEMD_UNIT
              value: my_systemd_excludeUnitRegex
      filter/include_containers:
        logs:
          include:
            match_type: regexp
            record_attributes:
            - key: k8s.container.name
              value: .+
      filter/include_fluent_tag_containers:
        logs:
          include:
            match_type: regexp
            record_attributes:
            - key: fluent.tag
              value: containers\..+
      filter/include_fluent_tag_host:
        logs:
          include:
            match_type: regexp
            record_attributes:
            - key: fluent.tag
              value: host\..+
      filter/include_kubelet:
        logs:
          include:
            match_type: strict
            record_attributes:
            - key: _SYSTEMD_UNIT
              value: kubelet.service
      filter/include_systemd:
        logs:
          include:
            match_type: regexp
            record_attributes:
            - key: _SYSTEMD_UNIT
              value: .+
      groupbyattrs/containers:
        keys:
        - k8s.container.id
        - k8s.container.name
        - k8s.namespace.name
        - k8s.pod.name
        - _collector
      groupbyattrs/systemd:
        keys:
        - _sourceName
        - _sourceHost
        - _collector
      k8s_tagger:
        extract:
          annotations:
          - key: '*'
            tag_name: pod_annotations_%s
          delimiter: _
          labels:
          - key: '*'
            tag_name: pod_labels_%s
          metadata:
          - daemonSetName
          - deploymentName
          - hostName
          - namespace
          - nodeName
          - podName
          - serviceName
          - statefulSetName
          namespace_labels:
          - key: '*'
            tag_name: namespace_labels_%s
        owner_lookup_enabled: true
        passthrough: false
        pod_association:
        - from: build_hostname
      logstransform/containers_parse_json:
        operators:
        - if: body matches "^{[\\s\\S]+"
          parse_from: body
          parse_to: body
          type: json_parser
      memory_limiter:
        check_interval: 5s
        limit_percentage: 75
        spike_limit_percentage: 20
      resource/add_cluster:
        attributes:
        - action: upsert
          key: cluster
          value: kubernetes
      resource/containers_copy_node_to_host:
        attributes:
        - action: upsert
          from_attribute: k8s.node.name
          key: k8s.pod.hostname
      resource/drop_annotations:
        attributes:
        - action: delete
          pattern: ^pod_annotations_.*
      resource/remove_pod_name:
        attributes:
        - action: delete
          key: pod_name
      resource/set_empty_source_metadata:
        attributes:
        - action: insert
          key: _sourceCategory
          value: ""
        - action: insert
          key: _sourceHost
          value: ""
        - action: insert
          key: _sourceName
          value: ""
      source/containers:
        annotation_prefix: pod_annotations_
        collector: my_collectorName
        container_annotations:
          enabled: false
          prefixes: []
        exclude:
          container: my_containers_excludeContainerRegex
          namespace: my_containers_excludeNamespaceRegex
          node: my_containers_excludeHostRegex
          pod: my_containers_excludePodRegex
        pod_key: pod
        pod_name_key: pod_name
        pod_template_hash_key: pod_labels_pod-template-hash
        source_category: my_containers_sourceCategory
        source_category_prefix: my_containers_sourceCategoryPrefix
        source_category_replace_dash: my_containers_sourceCategoryReplaceDash
        source_host: my_containers_sourceHost
        source_name: my_containers_sourceName
      source/kubelet:
        collector: my_collectorName
        source_category: my_kubelet_sourceCategory
        source_category_prefix: my_kubelet_sourceCategoryPrefix
        source_category_replace_dash: my_kubelet_sourceCategoryReplaceDash
        source_host: '%{_sourceHost}'
        source_name: my_kubelet_sourceName
      source/systemd:
        collector: my_collectorName
        source_category: my_systemd_sourceCategory
        source_category_prefix: my_systemd_sourceCategoryPrefix
        source_category_replace_dash: my_systemd_sourceCategoryReplaceDash
        source_host: '%{_sourceHost}'
        source_name: my_systemd_sourceName
      sumologic_schema:
        add_cloud_namespace: false
      transform/add_timestamp:
        log_statements:
        - context: log
          statements:
          - set(attributes["timestamp"], Int(time_unix_nano / 1000000))
      transform/flatten:
        log_statements:
        - context: log
          statements:
          - merge_maps(attributes, body, "insert")
          - set(body, "") where IsMatch(body, "^{") == true
      transform/remove_attributes:
        log_statements:
        - context: log
          statements:
          - limit(attributes, 0, [])
    receivers:
      otlp:
        protocols:
          http:
            endpoint: 0.0.0.0:4318
    service:
      extensions:
      - health_check
      - file_storage
      - pprof
      pipelines:
        logs/otlp/containers:
          exporters:
          - sumologic/containers
          processors:
          - memory_limiter
          - filter/include_containers
          - groupbyattrs/containers
          - k8s_tagger
          - resource/add_cluster
          - resource/set_empty_source_metadata
          - resource/containers_copy_node_to_host
          - sumologic_schema
          - source/containers
          - logstransform/containers_parse_json
          - resource/remove_pod_name
          - resource/drop_annotations
          - transform/add_timestamp
          - batch
          receivers:
          - otlp
        logs/otlp/kubelet:
          exporters:
          - sumologic/systemd
          processors:
          - memory_limiter
          - filter/include_fluent_tag_host
          - filter/include_kubelet
          - filter/exclude_kubelet_syslog
          - filter/exclude_kubelet_hostname
          - filter/exclude_kubelet_priority
          - filter/exclude_kubelet_unit
          - attributes/extract_systemd_source_fields
          - attributes/remove_fluent_tag
          - groupbyattrs/systemd
          - resource/add_cluster
          - source/kubelet
          - transform/remove_attributes
          - transform/flatten
          - transform/add_timestamp
          - batch
          receivers:
          - otlp
        logs/otlp/systemd:
          exporters:
          - sumologic/systemd
          processors:
          - memory_limiter
          - filter/include_fluent_tag_host
          - filter/include_systemd
          - filter/exclude_kubelet
          - filter/exclude_systemd_syslog
          - filter/exclude_systemd_hostname
          - filter/exclude_systemd_priority
          - filter/exclude_systemd_unit
          - attributes/extract_systemd_source_fields
          - attributes/remove_fluent_tag
          - groupbyattrs/systemd
          - resource/add_cluster
          - source/systemd
          - transform/remove_attributes
          - transform/flatten
          - transform/add_timestamp
          - batch
          receivers:
          - otlp
      telemetry:
        logs:
          level: info
