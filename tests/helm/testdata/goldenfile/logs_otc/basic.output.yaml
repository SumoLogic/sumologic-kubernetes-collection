---
# Source: sumologic/templates/logs/collector/otelcol/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-sumologic-otelcol-logs-collector
  namespace: sumologic
  labels:
    app: RELEASE-NAME-sumologic-otelcol-logs-collector
    chart: "sumologic-%CURRENT_CHART_VERSION%"
    release: "RELEASE-NAME"
    heritage: "Helm"
data:
  config.yaml: |
    exporters:
      otlphttp:
        disable_keep_alives: true
        endpoint: http://${LOGS_METADATA_SVC}.${NAMESPACE}.svc.cluster.local.:4318
        sending_queue:
          queue_size: 10
    extensions:
      file_storage:
        compaction:
          directory: /var/lib/storage/otc
          on_rebound: true
        directory: /var/lib/storage/otc
        timeout: 10s
      health_check: {}
      pprof: {}
    processors:
      batch:
        send_batch_max_size: 2000
        send_batch_size: 1000
        timeout: 1s
      logstransform/systemd:
        operators:
        - from: body._SYSTEMD_UNIT
          to: attributes._SYSTEMD_UNIT
          type: copy
        - from: body.SYSLOG_FACILITY
          to: attributes.SYSLOG_FACILITY
          type: copy
        - from: body._HOSTNAME
          to: attributes._HOSTNAME
          type: copy
        - from: body.PRIORITY
          to: attributes.PRIORITY
          type: copy
        - field: attributes["fluent.tag"]
          type: add
          value: EXPR("host." + attributes["_SYSTEMD_UNIT"])
        - field: body.__CURSOR
          type: remove
        - field: body.__MONOTONIC_TIMESTAMP
          type: remove
    receivers:
      filelog/containers:
        exclude:
        - /var/log/pods/sumologic_RELEASE-NAME-sumologic-mock*/*/*.log
        include:
        - /var/log/pods/*/*/*.log
        include_file_name: false
        include_file_path: true
        operators:
        - add_metadata_from_filepath: true
          type: container
        - from: attributes["log.iostream"]
          to: attributes["stream"]
          type: move
        - fields:
          - attributes["stream"]
          - attributes["k8s.pod.name"]
          - attributes["k8s.container.name"]
          - attributes["k8s.namespace.name"]
          - attributes["log.file.path"]
          id: keep-fields
          type: retain
        - default: multiline
          id: strip-trailing-newline-router
          routes:
          - expr: body matches "^.*\n$"
            output: strip-trailing-newline
          type: router
        - id: strip-trailing-newline
          output: replace-body
          parse_from: body
          parse_to: attributes
          regex: |-
            ^(?P<log>.*)
            $
          type: regex_parser
        - from: attributes.log
          id: replace-body
          to: body
          type: move
        - default: merge-multiline-logs
          id: multiline
          routes: null
          type: router
        - combine_field: body
          combine_with: |2+

          id: merge-multiline-logs
          is_first_entry: body matches "^\\[?\\d{4}-\\d{1,2}-\\d{1,2}.\\d{2}:\\d{2}:\\d{2}"
          max_unmatched_batch_size: 1
          output: clean-up-log-file-path
          source_identifier: attributes["log.file.path"]
          type: recombine
        - field: attributes["log.file.path"]
          id: clean-up-log-file-path
          type: remove
        storage: file_storage
      journald:
        directory: /var/log/journal
        units:
        - addon-config.service
        - addon-run.service
        - cfn-etcd-environment.service
        - cfn-signal.service
        - clean-ca-certificates.service
        - containerd.service
        - coreos-metadata.service
        - coreos-setup-environment.service
        - coreos-tmpfiles.service
        - dbus.service
        - docker.service
        - efs.service
        - etcd-member.service
        - etcd.service
        - etcd2.service
        - etcd3.service
        - etcdadm-check.service
        - etcdadm-reconfigure.service
        - etcdadm-save.service
        - etcdadm-update-status.service
        - flanneld.service
        - format-etcd2-volume.service
        - kube-node-taint-and-uncordon.service
        - kubelet.service
        - ldconfig.service
        - locksmithd.service
        - logrotate.service
        - lvm2-monitor.service
        - mdmon.service
        - nfs-idmapd.service
        - nfs-mountd.service
        - nfs-server.service
        - nfs-utils.service
        - node-problem-detector.service
        - ntp.service
        - oem-cloudinit.service
        - rkt-gc.service
        - rkt-metadata.service
        - rpc-idmapd.service
        - rpc-mountd.service
        - rpc-statd.service
        - rpcbind.service
        - set-aws-environment.service
        - system-cloudinit.service
        - systemd-timesyncd.service
        - update-ca-certificates.service
        - user-cloudinit.service
        - var-lib-etcd2.service
    service:
      extensions:
      - health_check
      - file_storage
      - pprof
      pipelines:
        logs/containers:
          exporters:
          - otlphttp
          processors:
          - batch
          receivers:
          - filelog/containers
        logs/systemd:
          exporters:
          - otlphttp
          processors:
          - logstransform/systemd
          - batch
          receivers:
          - journald
      telemetry:
        logs:
          level: info
