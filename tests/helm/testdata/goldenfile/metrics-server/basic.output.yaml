---
# Source: sumologic/charts/metrics-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-metrics-server
  namespace: "sumologic"
  labels:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/version: 0.7.0
    helm.sh/chart: metrics-server-6.13.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: metrics-server
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: metrics-server
        app.kubernetes.io/version: 0.7.0
        helm.sh/chart: metrics-server-6.13.1
    spec:
      serviceAccountName: RELEASE-NAME-metrics-server
      volumes:
        - emptyDir: {}
          name: empty-dir
      affinity:
        podAffinity:

        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: RELEASE-NAME
                    app.kubernetes.io/name: metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:

      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      containers:
        - name: metrics-server
          image: docker.io/bitnami/metrics-server:0.7.0-debian-12-r8
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          command:
            - metrics-server
          args:
            - --secure-port=8443
            - --kubelet-insecure-tls=true
            - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          env:
          envFrom:
          ports:
            - name: https
              containerPort: 8443
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
          volumeMounts:
            - mountPath: "/tmp"
              name: "empty-dir"
              subPath: "tmp-dir"
            - mountPath: "/opt/bitnami/metrics-server/apiserver.local.config"
              name: "empty-dir"
              subPath: "app-tmp-dir"
