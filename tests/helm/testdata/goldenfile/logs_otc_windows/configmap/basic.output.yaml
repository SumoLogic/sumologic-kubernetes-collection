---
# Source: sumologic/templates/logs/collector/otellogswindows/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-sumologic-otelcol-windows-logs-collector
  namespace: sumologic
  labels:
    app: RELEASE-NAME-sumologic-otellogswindows-logs-collector
    chart: "sumologic-%CURRENT_CHART_VERSION%"
    release: "RELEASE-NAME"
    heritage: "Helm"
data:
  config.yaml: |
    exporters:
      otlphttp:
        disable_keep_alives: true
        endpoint: http://${LOGS_METADATA_SVC}.${NAMESPACE}.svc.cluster.local.:4318
        sending_queue:
          queue_size: 10
    extensions:
      file_storage:
        compaction:
          directory: /var/lib/storage/otc
          on_rebound: true
        directory: /var/lib/storage/otc
        timeout: 10s
      health_check: {}
      pprof: {}
    processors:
      batch:
        send_batch_max_size: 2000
        send_batch_size: 1000
        timeout: 1s
    receivers:
      filelog/containers:
        exclude:
        - /var/log/pods/sumologic_RELEASE-NAME-sumologic-mock*/*/*.log
        include:
        - /var/log/pods/*/*/*.log
        include_file_name: false
        include_file_path: true
        operators:
        - add_metadata_from_filepath: true
          type: container
        - from: resource["log.iostream"]
          to: resource["stream"]
          type: move
        - from: resource["time"]
          to: attributes["time"]
          type: move
        - fields:
          - resource["stream"]
          - resource["k8s.pod.name"]
          - resource["k8s.container.name"]
          - resource["k8s.namespace.name"]
          - attributes["log.file.path"]
          id: keep-fields
          type: retain
        - default: multiline
          id: strip-trailing-newline-router
          routes:
          - expr: body matches "^.*\n$"
            output: strip-trailing-newline
          type: router
        - id: strip-trailing-newline
          output: replace-body
          parse_from: body
          parse_to: attributes
          regex: |-
            ^(?P<log>.*)
            $
          type: regex_parser
        - from: attributes.log
          id: replace-body
          to: body
          type: move
        - default: merge-multiline-logs
          id: multiline
          routes: null
          type: router
        - combine_field: body
          combine_with: |2+

          id: merge-multiline-logs
          is_first_entry: body matches "^\\[?\\d{4}-\\d{1,2}-\\d{1,2}.\\d{2}:\\d{2}:\\d{2}"
          max_unmatched_batch_size: 1
          output: clean-up-log-file-path
          source_identifier: attributes["log.file.path"]
          type: recombine
        - field: attributes["log.file.path"]
          id: clean-up-log-file-path
          type: remove
        storage: file_storage
    service:
      extensions:
      - health_check
      - file_storage
      - pprof
      pipelines:
        logs/containers:
          exporters:
          - otlphttp
          processors:
          - batch
          receivers:
          - filelog/containers
      telemetry:
        logs:
          level: info
