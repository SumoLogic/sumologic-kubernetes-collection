---
# Source: sumologic/templates/logs/collector/otellogswindows/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-sumologic-otelcol-windows-logs-collector
  namespace: sumologic
  labels:
    app: RELEASE-NAME-sumologic-otellogswindows-logs-collector
    chart: "sumologic-%CURRENT_CHART_VERSION%"
    release: "RELEASE-NAME"
    heritage: "Helm"
data:
  config.yaml: |
    exporters:
      otlphttp:
        disable_keep_alives: true
        endpoint: http://${LOGS_METADATA_SVC}.${NAMESPACE}.svc.cluster.local.:4318
        sending_queue:
          queue_size: 10
    extensions:
      file_storage:
        compaction:
          directory: /var/lib/storage/otc
          on_rebound: true
        directory: /var/lib/storage/otc
        timeout: 10s
      health_check: {}
      pprof: {}
    processors:
      batch:
        send_batch_max_size: 2000
        send_batch_size: 1000
        timeout: 1s
    receivers:
      filelog/containers:
        exclude:
        - /var/log/pods/sumologic_RELEASE-NAME-sumologic-mock*/*/*.log
        include:
        - /var/log/pods/*/*/*.log
        include_file_name: false
        include_file_path: true
        operators:
        - id: get-format
          routes:
          - expr: body matches "^\\{"
            output: parser-docker
          - expr: body matches "^[^ Z]+ "
            output: parser-crio
          - expr: body matches "^[^ Z]+Z"
            output: parser-containerd
          type: router
        - id: parser-crio
          output: merge-cri-lines
          parse_to: body
          regex: ^(?P<time>[^ Z]+) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*)( |)(?P<log>.*)$
          timestamp:
            layout: "2006-01-02T15:04:05.000000000-07:00"
            layout_type: gotime
            parse_from: body.time
          type: regex_parser
        - id: parser-containerd
          output: merge-cri-lines
          parse_to: body
          regex: ^(?P<time>[^ ^Z]+Z) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*)( |)(?P<log>.*)$
          timestamp:
            layout: '%Y-%m-%dT%H:%M:%S.%LZ'
            parse_from: body.time
          type: regex_parser
        - id: parser-docker
          output: merge-docker-lines
          parse_to: body
          timestamp:
            layout: '%Y-%m-%dT%H:%M:%S.%LZ'
            parse_from: body.time
          type: json_parser
        - combine_field: body.log
          combine_with: ""
          id: merge-docker-lines
          is_last_entry: body.log matches "\n$"
          output: strip-trailing-newline
          source_identifier: attributes["log.file.path"]
          type: recombine
        - combine_field: body.log
          combine_with: ""
          id: merge-cri-lines
          is_last_entry: body.logtag == "F"
          output: extract-metadata-from-filepath
          overwrite_with: newest
          source_identifier: attributes["log.file.path"]
          type: recombine
        - id: strip-trailing-newline
          output: extract-metadata-from-filepath
          parse_from: body.log
          parse_to: body
          regex: |-
            ^(?P<log>.*)
            $
          type: regex_parser
        - id: extract-metadata-from-filepath
          parse_from: attributes["log.file.path"]
          regex: ^.*\\(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\-]+)\\(?P<container_name>[^\._]+)\\(?P<run_id>\d+)\.log$
          type: regex_parser
        - from: body.stream
          id: move-attributes
          to: attributes["stream"]
          type: move
        - from: attributes.container_name
          to: attributes["k8s.container.name"]
          type: move
        - from: attributes.namespace
          to: attributes["k8s.namespace.name"]
          type: move
        - from: attributes.pod_name
          to: attributes["k8s.pod.name"]
          type: move
        - from: body.log
          to: body
          type: move
        - field: attributes.run_id
          type: remove
        - field: attributes.uid
          type: remove
        - default: merge-multiline-logs
          id: multiline
          routes: null
          type: router
        - combine_field: body
          combine_with: |2+

          id: merge-multiline-logs
          is_first_entry: body matches "^\\[?\\d{4}-\\d{1,2}-\\d{1,2}.\\d{2}:\\d{2}:\\d{2}"
          output: clean-up-log-file-path
          source_identifier: attributes["log.file.path"]
          type: recombine
        - field: attributes["log.file.path"]
          id: clean-up-log-file-path
          type: remove
        storage: file_storage
    service:
      extensions:
      - health_check
      - file_storage
      - pprof
      pipelines:
        logs/containers:
          exporters:
          - otlphttp
          processors:
          - batch
          receivers:
          - filelog/containers
      telemetry:
        logs:
          level: info
