---
# Source: sumologic/templates/events/otelcol/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-sumologic-otelcol-events
  namespace: sumologic
  labels:
    app: RELEASE-NAME-sumologic-otelcol-events
    chart: "sumologic-%CURRENT_CHART_VERSION%"
    release: "RELEASE-NAME"
    heritage: "Helm"
data:
  config.yaml: |
    exporters:
      sumologic:
        clear_logs_timestamp: false
        endpoint: ${SUMO_ENDPOINT_DEFAULT_OTLP_EVENTS_SOURCE}
        log_format: otlp
        sending_queue:
          enabled: true
    extensions:
      health_check: {}
      pprof: {}
    processors:
      batch:
        send_batch_max_size: 2048
        send_batch_size: 1024
        timeout: 1s
      memory_limiter:
        check_interval: 1s
        limit_percentage: 70
        spike_limit_percentage: 20
      resource/add_cluster:
        attributes:
        - action: upsert
          key: cluster
          value: testCluster
      source:
        collector: testCollector
        source_category: testSourceCategory
        source_category_prefix: ""
        source_category_replace_dash: ;
        source_name: testSourceName
      sumologic_schema:
        add_cloud_namespace: false
      transform/add_timestamp:
        log_statements:
        - context: log
          statements:
          - set(time, Now()) where time_unix_nano == 0
          - set(attributes["timestamp"], Int(time_unix_nano / 1000000))
    receivers:
      raw_k8s_events: {}
    service:
      extensions:
      - health_check
      - pprof
      pipelines:
        logs/events:
          exporters:
          - sumologic
          processors:
          - memory_limiter
          - resource/add_cluster
          - source
          - sumologic_schema
          - transform/add_timestamp
          - batch
          receivers:
          - raw_k8s_events
      telemetry:
        logs:
          level: debug
