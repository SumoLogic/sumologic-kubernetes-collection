kube-prometheus-stack:
  grafana:
    enabled: true
    dashboardsConfigMaps:
      default: sumologic-dashboards
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    sidecar:
      image:
        sha: ""
  prometheus:
    prometheusSpec:
      externalLabels:
        cluster: microk8s
      resources:
        limits:
          cpu: 4000m
          memory: 12Gi
        requests:
          cpu: 500m
          memory: 512Mi

sumologic:
  cleanupEnabled: false

  logs:
    systemd:
      otelcol:
        extraProcessors:
          - filter/exclude_systemd_snap_kubelite:
              logs:
                exclude:
                  match_type: strict
                  record_attributes:
                    - key: _SYSTEMD_UNIT
                      value: snap.microk8s.daemon-kubelite.service
    kubelet:
      otelcol:
        extraProcessors:
          - filter/include_systemd_snap_kubelite:
              logs:
                include:
                  match_type: strict
                  record_attributes:
                    - key: _SYSTEMD_UNIT
                      value: snap.microk8s.daemon-kubelite.service

telegraf-operator:
  enabled: true
  replicaCount: 1

falco:
  enabled: true
  customRules:
    # Mark the following as known k8s api callers:
    # * prometheus
    # * prometheus operator
    # * telegraf operator
    # * grafana sidecar
    rules_user_known_k8s_api_callers.yaml: |-
      - macro: user_known_contact_k8s_api_server_activities
        condition: >
          (container.image.repository = "quay.io/prometheus/prometheus") or
          (container.image.repository = "quay.io/coreos/prometheus-operator") or
          (container.image.repository = "quay.io/influxdb/telegraf-operator") or
          (container.image.repository = "kiwigrid/k8s-sidecar")
    rules_user_sensitive_mount_containers.yaml: |-
      - macro: user_sensitive_mount_containers
        condition: >
          (container.image.repository = "falcosecurity/falco") or
          (container.image.repository = "quay.io/prometheus/node-exporter")
    # NOTE: kube-proxy not exact matching because of regional ecr e.g.
    # 602401143452.dkr.ecr.us-west-1.amazonaws.com/eks/kube-proxy
    rules_user_privileged_containers.yaml: |-
      - macro: user_privileged_containers
        condition: >
          (container.image.repository endswith ".amazonaws.com/eks/kube-proxy")

otellogs:
  config:
    receivers:
      filelog/containers:
        exclude:
          - /var/log/pods/receiver-mock_*/*/*.log

debug:
  sumologicMock:
    enabled: true
  enableLocalMode: true
